{"version":3,"sources":["images/header-logo.svg","contexts/CurrentUserContext.js","components/Header.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/constants.js","components/Form.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","components/Confirm.js","components/Auth.js","components/Login.js","components/Register.js","images/failure.svg","images/success.svg","components/InfoTooltip.js","utils/apiAuth.js","components/ProtectedRoute.js","components/App.js","reportWebVitals.js","index.js"],"names":["CurrentUserContext","createContext","Header","logo","loggedIn","onExit","useState","menuIsOpen","setMenuIsOpen","currentUser","useContext","className","cn","header_compact","href","src","alt","header__navbar_vertical","header__navbar_hidden","exact","path","email","to","onClick","header__btn_action_close","header__btn_action_open","Card","card","onCardClick","onCardLike","onCardDelete","_id","owner","type","link","name","like__btn_active","likes","some","item","title","reduce","res","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","avatar","about","map","Footer","Date","getFullYear","ImagePopup","isOpen","onClose","evt","target","currentTarget","propsPopupWithAddForm","submitStates","static","loading","propsPopupWithEditForm","propsPopupWithEditAvatarForm","propsPopupWithConfirmForm","propsAuthLogIn","propsAuthRegister","FormContext","Form","validators","onSubmit","defaultValues","children","formValues","setFormValues","showErrors","setShowErrors","formErrors","setFormErrors","isInvalid","setIsInvalid","useEffect","allErrors","Object","keys","key","valueByKey","errors","entries","errorKey","validatorFn","acc","fileKey","keyErrors","valid","formContextValue","onChangeInput","value","prevValues","preventDefault","noValidate","Provider","Field","find","errorMessage","message","onChange","e","Submit","disabled","PopupWithForm","isLoad","inputsList","fieldsList","inputProps","popup_opened","data-name","popup__btn__disabled","required","minLength","placeholder","maxLength","EditProfilePopup","isLoading","onUpdateUser","values","isUrl","test","EditAvatarPopup","onUpdateAvatar","AddPlacePopup","apiObject","baseUrl","baseUrlAuth","headers","this","_baseUrl","_baseUrlAuth","_headers","relativePath","method","body","options","fetch","response","json","description","ok","Promise","reject","status","_getProxy","_handleResponse","JSON","stringify","id","like","authorization","Confirm","Auth","password","auth__btn_disabled","Login","onAuthorization","Register","onRegistration","InfoTooltip","isSuccess","success","failure","apiAuthObject","error","jwt","params","Authorization","ProtectedRoute","props","App","history","useHistory","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmOpen","setIsConfirmOpen","isImagePopupOpen","setIsImagePopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setIsLoading","infoTooltipProps","setInfoTooltipProps","setLoggedIn","currentUserEmail","setCurrentUserEmail","getCardList","then","data","catch","console","log","finally","getUserData","localStorage","getItem","tokenCheck","push","closeAllPopups","onKeyDown","importedLogo","removeItem","isLiked","toggleCardLike","newCard","newCards","addCard","setUserData","setAvatar","deleteCard","filter","signIn","token","setItem","signUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAe,MAA0B,wC,wBCE5BA,EAAqBC,0BCInB,SAASC,EAAT,GAA6C,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,OAAU,EAErBC,oBAAS,GAFY,mBAElDC,EAFkD,KAEtCC,EAFsC,KAInDC,EAAcC,qBAAWV,GAY/B,OACE,yBAAQW,UAAWC,IAAG,SAAU,CAAEC,eAAgBT,IAAlD,UACE,mBAAGU,KAAK,KAAR,SACE,qBAAKC,IAAKZ,EAAMa,IAAI,8HAA0BL,UAAU,mBAE1D,sBAAKA,UAAWC,IACd,iBACA,CAAEK,wBAAyBb,EAAUc,sBAAuBd,IAAaG,IAF3E,UAIE,eAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,IAAlB,UACE,mBAAGT,UAAU,gBAAb,SAA8BF,EAAYY,QAC1C,cAAC,IAAD,CAASC,GAAG,WAAWX,UAAU,gBAAjC,SACE,wBAAQA,UAAU,oCAAoCY,QAlBtC,WACxBlB,KAiBQ,iDAKJ,cAAC,IAAD,CAAOe,KAAK,WAAZ,SACE,cAAC,IAAD,CAASE,GAAG,WAAWX,UAAU,gBAAjC,kFAEF,cAAC,IAAD,CAAOS,KAAK,WAAZ,SACE,cAAC,IAAD,CAASE,GAAG,WAAWX,UAAU,gBAAjC,iDAGHP,GAAY,wBAAQO,UAAWC,IAC9B,sCACA,CAAEY,yBAA0BjB,EAAYkB,yBAA0BlB,IACjEgB,QArCqB,WAC1Bf,GAAeD,SCTJ,SAASmB,EAAT,GAAgE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aACtDrB,EAAcC,qBAAWV,GAc/B,OACE,qBAAIW,UAAU,OAAd,UACGF,EAAYsB,MAAQJ,EAAKK,MAAMD,KAC9B,wBAAQpB,UAAU,mCAAmCsB,KAAK,SAASV,QAP/C,WACxBO,EAAaH,MASX,qBAAKZ,IAAKY,EAAKO,KAAMlB,IAAKW,EAAKQ,KAAMxB,UAAU,cAAcY,QAlB7C,WAClBK,EAAYD,MAkBV,sBAAKhB,UAAU,eAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BgB,EAAKQ,OACpC,sBAAKxB,UAAU,kBAAf,UACE,wBACEA,UAAWC,IACT,YACA,CAAEwB,iBAAkBT,EAAKU,MAAMC,MAAK,SAACC,GAAD,OAAUA,EAAKR,MAAQtB,EAAYsB,SAEzER,QAvBc,WACtBM,EAAWF,IAuBHM,KAAK,WAEP,mBAAGtB,UAAU,cAAc6B,MAAOb,EAAKU,MAAMI,QAAO,SAACC,EAAKH,GAAN,OAAeG,EAAG,UAAOH,EAAKJ,KAAZ,QAAsB,IAA5F,SACGR,EAAKU,MAAMM,kBCjCT,SAASC,EAAT,GAQX,IAPFC,EAOC,EAPDA,aACAC,EAMC,EANDA,cACAC,EAKC,EALDA,WACAC,EAIC,EAJDA,MACApB,EAGC,EAHDA,YACAC,EAEC,EAFDA,WACAC,EACC,EADDA,aAEMrB,EAAcC,qBAAWV,GAE/B,OACE,uBAAMW,UAAU,UAAhB,UACE,0BAASA,UAAU,UAAnB,UACE,yBAAQA,UAAU,+CAA+CY,QAASsB,EAA1E,UACE,qBAAK9B,IAAKN,EAAYwC,OAAQjC,IAAI,wCAAUL,UAAU,oBACtD,sBAAMA,UAAU,+BAElB,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BF,EAAY0B,OAC3C,wBAAQxB,UAAU,wCAAwCsB,KAAK,SAASV,QAASuB,IACjF,mBAAGnC,UAAU,iBAAb,SAA+BF,EAAYyC,WAE7C,wBAAQvC,UAAU,uCAAuCsB,KAAK,SAASV,QAASwB,OAElF,kCACE,oBAAIpC,UAAU,QAAd,SACGqC,EAAMG,KAAI,SAACZ,GACV,OACE,cAACb,EAAD,CACEC,KAAMY,EACNX,YAAaA,EACbC,WAAYA,EACZC,aAAcA,GACTS,EAAKR,eCrCX,SAASqB,IACtB,OACE,wBAAQzC,UAAU,SAAlB,SACE,oBAAGA,UAAU,oBAAb,gBAAoC,IAAI0C,MAAOC,cAA/C,kFCHS,SAASC,EAAT,GAAgD,IAA1B5B,EAAyB,EAAzBA,KAAM6B,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAQjD,OACE,qBAAK9C,UAAS,gCAA2B6C,EAAS,eAAiB,IAAMjC,QAP3C,SAACmC,GAC3BA,EAAIC,SAAWD,EAAIE,eACrBH,KAKF,SACE,sBAAK9C,UAAU,8CAAf,UACE,wBAAQA,UAAU,qCAAqCsB,KAAK,SAASV,QAASkC,IAC9E,qBAAK1C,IAAKY,EAAKO,KAAMlB,IAAKW,EAAKQ,KAAMxB,UAAU,iBAC/C,oBAAIA,UAAU,iBAAd,SAAgCgB,EAAKQ,YCftC,IAAM0B,EAAwB,CACnCrB,MAAO,gEACPL,KAAM,MACN2B,aAAc,CACZC,OAAQ,6CACRC,QAAS,wDAGAC,EAAyB,CACpCzB,MAAO,4HACPL,KAAM,OACN2B,aAAc,CACZC,OAAQ,yDACRC,QAAS,oEAGAE,EAA+B,CAC1C1B,MAAO,wFACPL,KAAM,cACN2B,aAAc,CACZC,OAAQ,yDACRC,QAAS,oEAGAG,EAA4B,CACvC3B,MAAO,2DACPL,KAAM,UACN2B,aAAc,CACZC,OAAQ,eACRC,QAAS,wDAIAI,EAAiB,CAC5B5B,MAAO,2BACPL,KAAM,QACN2B,aAAc,CACZC,OAAQ,iCACRC,QAAS,4CAIAK,EAAoB,CAC/B7B,MAAO,qEACPL,KAAM,WACN2B,aAAc,CACZC,OAAQ,+GACRC,QAAS,4F,gBC7CPM,EAAcrE,wBAAc,IAEnB,SAASsE,EAAT,GAQX,IAPFpC,EAOC,EAPDA,KACAxB,EAMC,EANDA,UACA6C,EAKC,EALDA,OACAgB,EAIC,EAJDA,WACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,cACAC,EACC,EADDA,SACC,EAGmCrE,mBAAS,IAH5C,mBAGMsE,EAHN,KAGkBC,EAHlB,OAKmCvE,mBAAS,IAL5C,mBAKMwE,EALN,KAKkBC,EALlB,OAOmCzE,mBAAS,IAP5C,mBAOM0E,EAPN,KAOkBC,EAPlB,OASiC3E,oBAAS,GAT1C,mBASM4E,EATN,KASiBC,EATjB,KAaDC,qBAAU,WACRP,EAAcH,KACb,CAACA,IAEJU,qBAAU,WACH5B,IAEHuB,EAAc,IAEdF,EAAcH,MAEf,CAAClB,EAAQkB,IAqBZU,qBAAU,WAER,IAGMC,EAHWC,OAAOC,KAAKX,GAI1BzB,KAAI,SAACqC,GACJ,IAAMC,EAAab,EAAWY,GAC9B,IAAKhB,EAAWgB,GACd,MAAO,GAET,IAAME,EAASJ,OAAOK,QAAQnB,EAAWgB,IACtCrC,KAAI,YAA8B,IAAD,mBAA3ByC,EAA2B,KAAjBC,EAAiB,KAChC,OAAO,eAAGD,EAAWC,EAAYJ,OAElChD,QAAO,SAACqD,EAAKvD,GAAN,mBAAC,eAAoBuD,GAAQvD,KAAS,IAChD,OAAO,eAAGiD,EAAME,MAEjBjD,QAAO,SAACqD,EAAKvD,GAAN,mBAAC,eAAoBuD,GAAQvD,KAAS,IAGhD0C,EAAcI,KACb,CAACT,EAAYJ,IAGhBY,qBAAU,WACR,IAAK,IAAMW,KAAWf,EAAY,CAChC,IAAMgB,EAAYhB,EAAWe,GAC7B,IAAK,IAAMH,KAAYI,EACrB,IAAkC,IAA9BA,EAAUJ,GAAUK,MACtB,OAAOd,GAAa,GAI1BA,GAAa,KACZ,CAACH,IAGJ,IAAMkB,EAAmB,CAAEC,cAxDL,SAAChE,EAAMiE,GAE3BvB,GAAc,SAACwB,GAAD,mBAAC,eAAqBA,GAAtB,kBAAmClE,EAAOiE,OAEpDA,IAAU1B,EAAcvC,IAC1B4C,GAAc,SAACsB,GAAD,mBAAC,eAAqBA,GAAtB,kBAAmClE,GAAO,QAmDlB+C,YAAWF,aAAYF,aAAYF,cAE7E,OACE,sBACEjE,UAAWA,EACXwB,KAAMA,EACNsC,SApDiB,SAACf,GACpBA,EAAI4C,iBAEJvB,EAAc,IACdN,EAASG,IAiDP2B,YAAU,EAJZ,SAME,cAACjC,EAAYkC,SAAb,CAAsBJ,MAAOF,EAA7B,SAAgDvB,MAM/C,SAAS8B,EAAT,GAAoC,IAAnBtE,EAAkB,EAAlBA,KAAMwC,EAAY,EAAZA,SAAY,EAEsBjE,qBAAW4D,GAAjE6B,EAFgC,EAEhCA,cAAevB,EAFiB,EAEjBA,WAAYI,EAFK,EAELA,WAAYF,EAFP,EAEOA,WAQzCI,IAAcF,EAAW7C,IAC7BmD,OAAOC,KAAKP,EAAW7C,IAAOG,MAAK,SAACkD,GAAD,OAAyC,IAAhCR,EAAW7C,GAAMqD,GAAKS,SAG9DL,EAAcZ,EAAW7C,GACbmD,OAAOC,KAAKP,EAAW7C,IAAOuE,MAAK,SAAClB,GAAD,OAAyC,IAAhCR,EAAW7C,GAAMqD,GAAKS,SAAmB,GAGjGU,EAAiBf,EAAWZ,EAAW7C,GAAMyD,GAAUgB,QAAU,GAEvE,OAAOjC,EAAS,CACdyB,MAAQxB,EAAWzC,GAAayC,EAAWzC,GAAhB,GAC3B+C,UAAWA,GAAaJ,EAAW3C,GACnCwE,aAAcA,EACdE,SAnBwB,SAACC,GACzBX,EAAchE,EAAM2E,EAAEnD,OAAOyC,UAsB1B,SAASW,EAAT,GAGL,OAAOpC,EAH4B,EAAZA,UAGP,CAAEqC,SADItG,qBAAW4D,GAAzBY,YCxIK,SAAS+B,EAAT,GAYX,IAXFzE,EAWC,EAXDA,MACAL,EAUC,EAVDA,KACAqB,EASC,EATDA,OACA0D,EAQC,EARDA,OACApD,EAOC,EAPDA,aACAU,EAMC,EANDA,WACAf,EAKC,EALDA,QACAgB,EAIC,EAJDA,SAIC,KAHDE,SAGC,EAFDwC,mBAEC,MAFY,GAEZ,EADDzC,EACC,EADDA,cASM0C,EAAaD,EAAWhE,KAAI,SAACZ,GAAD,OAC9B,cAACkE,EAAD,CAAoCtE,KAAMI,EAAKJ,KAA/C,SAEI,gBAAG+C,EAAH,EAAGA,UAAWyB,EAAd,EAAcA,aAAiBU,EAA/B,mDACE,qCACE,+CAAOpF,KAAK,OACLtB,UACEC,IAAG,kCAAD,OAAmC2B,EAAKJ,MAAQ,CAChD,wBAA2B+C,KAG3B3C,GACA8E,IACX,sBAAM1G,UAAWC,IAAG,eAAgB,CAAE,qBAAwBsE,IAA9D,SACAA,EAAYyB,EAAe,UAbnC,UAAexE,EAAf,YAAuBI,EAAKJ,UAsBhC,OACE,qBAAKxB,UAAWC,IAAG,oBAAD,OAAqBuB,GAAQ,CAAEmF,aAAc9D,IAC1D+D,YAAWpF,EACXZ,QAhCyB,SAACmC,GAC3BA,EAAIC,SAAWD,EAAIE,eACrBH,KA4BF,SAIE,eAACc,EAAD,CACE5D,UAAU,8CACVwB,KAAK,YACLsC,SAAUA,EACVD,WAAYA,EACZE,cAAeA,EACflB,OAAQA,EANV,UAQE,wBACE7C,UAAU,qCACVsB,KAAK,SACLV,QAASkC,IAEX,oBAAI9C,UAAU,eAAd,SAA8B6B,IAC7B4E,EACD,cAACL,EAAD,UAEI,gBAAGC,EAAH,EAAGA,SAAH,OACE,wBACErG,UAAWC,IAAG,aAAc,2BAA4B,CACtD4G,qBAAsBR,IAExB/E,KAAK,SACL+E,SAAUA,EALZ,SAOIE,EAA+BpD,EAAaE,QAAnCF,EAAaC,iBCxExC,IAAMS,EAAa,CACjBrC,KAAM,CACJsF,SAAU,SAACrB,GACT,MAAO,CACLH,QAASG,EACTQ,QAAS,2HAGbc,UAAW,SAACtB,GACV,MAAO,CACLH,MAAOG,EAAMzD,OAAS,EACtBiE,QAAQ,kSAAD,OAA8DR,EAAMzD,OAApE,6CAIbO,MAAO,CACLuE,SAAU,SAACrB,GACT,MAAO,CACLH,QAASG,EACTQ,QAAS,2HAGbc,UAAW,SAACtB,GACV,MAAO,CACLH,MAAOG,EAAMzD,OAAS,EACtBiE,QAAQ,kSAAD,OAA8DR,EAAMzD,OAApE,8CAMTwE,EAAa,CACjB,CAAEhF,KAAM,OAAQwF,YAAa,mDAAYC,UAAW,IACpD,CAAEzF,KAAM,QAASwF,YAAa,8FAAoBC,UAAW,MAGhD,SAASC,EAAT,GAAyE,IAA7CrE,EAA4C,EAA5CA,OAAQsE,EAAoC,EAApCA,UAAWrE,EAAyB,EAAzBA,QAASsE,EAAgB,EAAhBA,aAK/DtH,EAAcC,qBAAWV,GAE/B,OACE,cAACiH,EAAD,CACEzE,MAAOyB,EAAuBzB,MAC9BL,KAAM8B,EAAuB9B,KAC7BqB,OAAQA,EACR0D,OAAQY,EACRhE,aAAcG,EAAuBH,aACrCU,WAAYA,EACZf,QAASA,EACTgB,SAfiB,SAACuD,GACpBD,EAAaC,IAeXtD,cAAejE,EACf0G,WAAYA,ICvDlB,IAAM3C,EAAa,CACjBtC,KAAM,CACJuF,SAAU,SAACrB,GACT,MAAO,CAAEH,QAASG,EAAOQ,QAAS,2HAEpCqB,MAAO,SAAC7B,GACN,MAAO,CAAEH,MAAO,yCAAyCiC,KAAK9B,GAAQQ,QAAS,gHAK/EO,EAAa,CACjB,CAAEhF,KAAM,OAAQwF,YAAa,uGAGhB,SAASQ,EAAT,GAA0E,IAA/C3E,EAA8C,EAA9CA,OAAQsE,EAAsC,EAAtCA,UAAWrE,EAA2B,EAA3BA,QAAS2E,EAAkB,EAAlBA,eAKpE,OACE,cAACnB,EAAD,CACEzE,MAAO0B,EAA6B1B,MACpCL,KAAM+B,EAA6B/B,KACnC+E,OAAQY,EACRtE,OAAQA,EACRM,aAAcI,EAA6BJ,aAC3CU,WAAYA,EACZf,QAASA,EACTgB,SAbiB,SAACuD,GACpBI,EAAeJ,IAabtD,cAAe,CAAExC,KAAM,IACvBiF,WAAYA,IC/BlB,IAAM3C,EAAa,CACjBrC,KAAM,CACJsF,SAAU,SAACrB,GACT,MAAO,CAAEH,MAAiB,KAAVG,EAAcQ,QAAS,2HAEzCc,UAAW,SAACtB,GACV,MAAO,CACLH,MAAOG,EAAMzD,OAAS,EACtBiE,QAAQ,kSAAD,OAA8DR,EAAMzD,OAApE,6CAIbT,KAAM,CACJuF,SAAU,SAACrB,GACT,MAAO,CAAEH,MAAiB,KAAVG,EAAcQ,QAAS,2HAEzCqB,MAAO,SAAC7B,GACN,MAAO,CAAEH,MAAO,yCAAyCiC,KAAK9B,GAAQQ,QAAS,gHAK/EO,EAAa,CACjB,CAAEhF,KAAM,OAAQwF,YAAa,mDAAYC,UAAW,IACpD,CAAEzF,KAAM,OAAQwF,YAAa,uGAGhB,SAASU,EAAT,GAAoE,IAA3C7E,EAA0C,EAA1CA,OAAQsE,EAAkC,EAAlCA,UAAWrE,EAAuB,EAAvBA,QAASV,EAAc,EAAdA,WAKlE,OACE,cAACkE,EAAD,CACEzE,MAAOqB,EAAsBrB,MAC7BL,KAAM0B,EAAsB1B,KAC5B+E,OAAQY,EACRtE,OAAQA,EACRM,aAAcD,EAAsBC,aACpCU,WAAYA,EACZf,QAASA,EACTgB,SAbiB,SAACuD,GACpBjF,EAAWiF,IAaTtD,cACE,CACEvC,KAAM,GACND,KAAM,IAGViF,WAAYA,I,2CCiBLmB,EAAY,I,WAlEvB,cAAgD,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,QAAW,oBAC7CC,KAAKC,SAAWJ,EAChBG,KAAKE,aAAeJ,EACpBE,KAAKG,SAAWJ,E,sDAGRK,EAAcC,GAAoB,IAAZC,EAAW,uDAAJ,GAC/BC,EAAU,CACdF,SACAN,QAASC,KAAKG,UAOhB,OAJMG,IACJC,EAAQD,KAAOA,GAGVE,MAAM,GAAD,OAAIR,KAAKC,UAAT,OAAoBG,GAAgBG,K,+EAG5BE,G,uFACMA,EAASC,O,UAA7BC,E,QAEFF,EAASG,G,yCACJD,G,gCAEAE,QAAQC,OAAR,gDAA0BL,EAASM,OAAnC,+DAAwDJ,EAAYzC,W,sQAKtD8B,KAAKgB,UAAU,YAAa,O,cAA7CP,E,gBACOT,KAAKiB,gBAAgBR,G,8SAGhBhH,E,EAAAA,KAAMe,E,EAAAA,M,SACDwF,KAAKgB,UAAU,YAAa,QAASE,KAAKC,UAAU,CAAE1H,OAAMe,W,cAA7EiG,E,gBACOT,KAAKiB,gBAAgBR,G,2SAGlBjH,E,EAAAA,K,SACOwG,KAAKgB,UAAU,mBAAoB,QAASE,KAAKC,UAAU,CAAE5G,OAAQf,K,cAAtFiH,E,gBACOT,KAAKiB,gBAAgBR,G,mTAIXT,KAAKgB,UAAU,SAAU,O,cAA1CP,E,gBACOT,KAAKiB,gBAAgBR,G,0SAGpBhH,E,EAAAA,KAAMD,E,EAAAA,K,SACGwG,KAAKgB,UAAU,SAAU,OAAQE,KAAKC,UAAU,CAAE1H,OAAMD,U,cAAzEiH,E,gBACOT,KAAKiB,gBAAgBR,G,yNAGnBW,G,uFACQpB,KAAKgB,UAAL,iBAAyBI,GAAM,U,cAAhDX,E,gBACOT,KAAKiB,gBAAgBR,G,6NAGfW,EAAIC,G,uFACArB,KAAKgB,UAAL,uBAA+BI,GAAMC,EAAO,MAAQ,U,cAArEZ,E,gBACOT,KAAKiB,gBAAgBR,G,wJAKb,CNlBE,CACzBZ,QAAS,8CACTE,QAAS,CACPuB,cAAe,uCACf,eAAgB,sBOnDL,SAASC,EAAT,GAA4D,IAAzCzG,EAAwC,EAAxCA,OAAQsE,EAAgC,EAAhCA,UAAWrE,EAAqB,EAArBA,QAASgB,EAAY,EAAZA,SAK5D,OACE,cAACwC,EAAD,CACEzE,MAAO2B,EAA0B3B,MACjCL,KAAMgC,EAA0BhC,KAChC2B,aAAcK,EAA0BL,aACxCN,OAAQA,EACR0D,OAAQY,EACRrE,QAASA,EACTgB,SAZiB,WACnBA,KAYEC,cAAe,KCdN,SAASwF,EAAT,GAA0G,IAA1F/H,EAAyF,EAAzFA,KAAMK,EAAmF,EAAnFA,MAAOsB,EAA4E,EAA5EA,aAAcgE,EAA8D,EAA9DA,UAAWnD,EAAmD,EAAnDA,SAAmD,IAAzCwC,kBAAyC,MAA5B,GAA4B,EAAxB3C,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,SAEpG2C,EAAaD,EAAWhE,KAAI,SAACZ,GAAD,OAC9B,cAACkE,EAAD,CAAoCtE,KAAMI,EAAKJ,KAA/C,SAEI,gBAAG+C,EAAH,EAAGA,UAAWyB,EAAd,EAAcA,aAAiBU,EAA/B,mDACE,qCACE,+CAAOpF,KAAK,OACLtB,UACEC,IAAG,gCAAD,OAAiC2B,EAAKJ,MAAQ,CAC9C,kBAAqB+C,KAGrB3C,GACA8E,IACX,sBAAM1G,UAAWC,IAAG,cAAe,CAAE,oBAAuBsE,IAA5D,SACAA,EAAYyB,EAAe,UAbnC,UAAexE,EAAf,YAAuBI,EAAKJ,UAsBhC,OACE,eAACoC,EAAD,CACE5D,UAAU,OACVwB,KAAK,YACLsC,SAAUA,EACVD,WAAYA,EACZE,cAAe,CACbrD,MAAO,GACP8I,SAAU,IAEZ3G,QAAQ,EATV,UAWE,mBAAG7C,UAAU,cAAb,SAA4B6B,IAC5B,0BAAU7B,UAAU,iBAApB,SACGyG,IAEH,cAACL,EAAD,UAEI,gBAAGC,EAAH,EAAGA,SAAH,OACE,wBACErG,UAAWC,IAAG,YAAa,0BAA2B,CACpDwJ,mBAAoBpD,IAEtB/E,KAAK,SACL+E,SAAUA,EALZ,SAOIc,EAAkChE,EAAaE,QAAnCF,EAAaC,YAKlCY,KCxDP,IAAMH,EAAa,CACjBnD,MAAO,CACLoG,SAAU,SAACrB,GACT,MAAO,CACLH,QAASG,EACTQ,QAAS,2HAGbc,UAAW,SAACtB,GACV,MAAO,CACLH,MAAO,6BAA6BiC,KAAK9B,GACzCQ,QAAQ,qFAIduD,SAAU,CACR1C,SAAU,SAACrB,GACT,MAAO,CACLH,QAASG,EACTQ,QAAS,2HAGbc,UAAW,SAACtB,GACV,MAAO,CACLH,MAAOG,EAAMzD,OAAS,EACtBiE,QAAQ,kSAAD,OAA8DR,EAAMzD,OAApE,8CAMTwE,EAAa,CACjB,CAAEhF,KAAM,QAASwF,YAAa,SAC9B,CAAExF,KAAM,WAAYwF,YAAa,yCAGpB,SAAS0C,GAAT,GAAmC,IAAnBC,EAAkB,EAAlBA,gBAC7B,OACE,cAACJ,EAAD,CAAM/H,KAAMiC,EAAejC,KACrBK,MAAO4B,EAAe5B,MACtBsB,aAAcM,EAAeN,aAC7BgE,WAAW,EACXtD,WAAYA,EACZ2C,WAAYA,EACZ1C,SAAU6F,IC3CpB,IAAM9F,GAAa,CACjBnD,MAAO,CACLoG,SAAU,SAACrB,GACT,MAAO,CACLH,QAASG,EACTQ,QAAS,2HAGbc,UAAW,SAACtB,GACV,MAAO,CACLH,MAAO,6BAA6BiC,KAAK9B,GACzCQ,QAAQ,qFAIduD,SAAU,CACR1C,SAAU,SAACrB,GACT,MAAO,CACLH,QAASG,EACTQ,QAAS,2HAGbc,UAAW,SAACtB,GACV,MAAO,CACLH,MAAOG,EAAMzD,OAAS,EACtBiE,QAAQ,kSAAD,OAA8DR,EAAMzD,OAApE,8CAMTwE,GAAa,CACjB,CAAEhF,KAAM,QAASwF,YAAa,SAC9B,CAAExF,KAAM,WAAYwF,YAAa,yCAGpB,SAAS4C,GAAT,GAAqC,IAAlBC,EAAiB,EAAjBA,eAEhC,OACE,cAACN,EAAD,CAAM/H,KAAMkC,EAAkBlC,KACxBK,MAAO6B,EAAkB7B,MACzBsB,aAAcO,EAAkBP,aAChCgE,WAAW,EACXtD,WAAYA,GACZ2C,WAAYA,GACZ1C,SAAU+F,EANhB,SAOE,cAAC,IAAD,CAASlJ,GAAG,WAAWX,UAAU,aAAjC,mKCnDS,WAA0B,oCCA1B,OAA0B,oCCI1B,SAAS8J,GAAT,GAA+D,IAAxCC,EAAuC,EAAvCA,UAAW9D,EAA4B,EAA5BA,QAASpD,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAQhE,OACE,qBAAK9C,UAAS,gBAAW6C,EAAS,eAAiB,IAAMjC,QAP3B,SAACmC,GAC3BA,EAAIC,SAAWD,EAAIE,eACrBH,KAKF,SACE,sBAAK9C,UAAU,4EAAf,UACE,wBAAQA,UAAU,qCAAqCsB,KAAK,SAASV,QAASkC,IAC9E,qBAAK1C,IAAK2J,EAAYC,GAAUC,GAAS5J,IAAI,4HAAwBL,UAAU,qBAC/E,oBAAIA,UAAU,yCAAd,SAAwDiG,S,ICoDnDiE,GAAgB,I,WAlE3B,cAAuC,IAAzBrC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,QAAW,oBACpCC,KAAKC,SAAWH,EAChBE,KAAKG,SAAWJ,E,yDAG4C,IAAlDK,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,OAAmC,IAA3BC,YAA2B,MAApB,GAAoB,MAAhBP,eAAgB,MAAN,GAAM,EACrDQ,EAAU,CACdF,SACAN,QAAQ,2BAAMC,KAAKG,UAAaJ,IAOlC,OAJMO,IACJC,EAAQD,KAAOA,GAGVE,MAAM,GAAD,OAAIR,KAAKC,UAAT,OAAoBG,GAAgBG,K,+EAG5BE,G,uFACMA,EAASC,O,UAA7BC,E,QAEFF,EAASG,G,yCACJD,G,gCAEAE,QAAQC,OAAO,CACpBC,OAAQN,EAASM,OACjB7C,QAASyC,EAAYzC,QAAUyC,EAAYzC,QAAUyC,EAAYyB,MACVzB,EAAYyB,MACZ,0M,iQAK1CC,E,EAAAA,IACXC,EAAS,CACblC,aAAc,YACdC,OAAQ,MACRN,QAAS,CACPwC,cAAc,UAAD,OAAYF,K,SAGNrC,KAAKgB,UAAUsB,G,cAAhC7B,E,gBACOT,KAAKiB,gBAAgBR,G,4SAGrBgB,E,EAAAA,SAAU9I,E,EAAAA,MACjB2J,EAAS,CACblC,aAAc,UACdC,OAAQ,OACRC,KAAMY,KAAKC,UAAU,CAAEM,WAAU9I,W,SAEZqH,KAAKgB,UAAUsB,G,cAAhC7B,E,gBACOT,KAAKiB,gBAAgBR,G,4SAGrBgB,E,EAAAA,SAAU9I,E,EAAAA,MACjB2J,EAAS,CACblC,aAAc,UACdC,OAAQ,OACRC,KAAMY,KAAKC,UAAU,CAAEM,WAAU9I,W,SAEZqH,KAAKgB,UAAUsB,G,cAAhC7B,E,gBACOT,KAAKiB,gBAAgBR,G,sJAIT,CdVE,CAC7BX,YAAa,gCACbC,QAAS,CACP,eAAgB,sBejDLyC,GAVQ,SAAC,GAA4B,IAA1BvG,EAAyB,EAAzBA,SAAawG,EAAY,4BACjD,OACE,cAAC,IAAD,UAEI,kBAAMA,EAAM/K,SAAWuE,EAAW,cAAC,IAAD,CAAUrD,GAAG,iBCyUxC8J,OA7Tf,WACE,IAAMC,EAAUC,cADH,EAI+ChL,oBAAS,GAJxD,mBAINiL,EAJM,KAIkBC,EAJlB,OAKyClL,oBAAS,GALlD,mBAKNmL,EALM,KAKeC,EALf,OAM6CpL,oBAAS,GANtD,mBAMNqL,EANM,KAMiBC,EANjB,OAO6BtL,oBAAS,GAPtC,mBAONuL,EAPM,KAOSC,EAPT,OAQmCxL,oBAAS,GAR5C,mBAQNyL,EARM,KAQYC,EARZ,OASqC1L,oBAAS,GAT9C,mBASN2L,EATM,KASaC,EATb,OAU2B5L,mBAAS,IAVpC,mBAUN6L,EAVM,KAUQC,EAVR,OAWyB9L,mBAAS,IAXlC,mBAWNG,EAXM,KAWO4L,EAXP,OAYa/L,mBAAS,IAZtB,mBAYN0C,EAZM,KAYCsJ,EAZD,QAaqBhM,oBAAS,GAb9B,qBAaNwH,GAbM,MAaKyE,GAbL,SAcmCjM,mBAAS,IAd5C,qBAcNkM,GAdM,MAcYC,GAdZ,SAemBnM,oBAAS,GAf5B,qBAeNF,GAfM,MAeIsM,GAfJ,SAgBmCpM,mBAAS,IAhB5C,qBAgBNqM,GAhBM,MAgBYC,GAhBZ,MAmBbxH,qBAAU,WACRkD,EACGuE,cACAC,MAAK,SAACC,GACLT,EAASS,MAEVC,OAAM,SAAClC,GACNmC,QAAQC,IAAIpC,MAEbqC,SAAQ,iBAEV,IAGH/H,qBAAU,WACRkD,EACG8E,cACAN,MAAK,SAACC,GACLV,EAAeU,MAEhBC,MAAMC,QAAQC,KACdC,SAAQ,iBAEV,IAGH/H,qBAAU,WACR,GAAIiI,aAAaC,QAAQ,OAAQ,CAC/B,IAAMvC,EAAMsC,aAAaC,QAAQ,OAEjCzC,GACG0C,WAAW,CAAExC,QACb+B,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPL,IAAY,GACZE,GAAoBG,EAAK1L,UAE1B2L,MAAMC,QAAQC,KACdC,SAAQ,kBAGZ,IAEH/H,qBAAU,WACJhF,IACFiL,EAAQmC,KAAK,OAEd,CAACpN,GAAUiL,IAGd,IA0BMoC,GAAiB,WACrB7B,GAAyB,GACzBJ,GAA0B,GAC1BE,GAAuB,GACvBI,GAAiB,GACjBE,GAAoB,GACpBE,GAAqB,IA+JvB,OAZA9G,qBAAU,WACJE,OAAOC,KAAKiH,IAAkB7J,OAAS,GACzCuJ,GAAqB,KAEtB,CAACM,KASF,cAACxM,EAAmBwG,SAApB,CAA6BJ,MAAK,2BAAO3F,GAAP,IAAoBY,MAAOsL,KAA7D,SACE,sBAAKhM,UAAU,OAAO+M,UAnEE,SAAChK,GACX,WAAZA,EAAI8B,KACNiI,MAiEA,UACE,cAACvN,EAAD,CAAQC,KAAMwN,EAAcvN,SAAUA,GAAUC,OATnC,WACjBgN,aAAaO,WAAW,OACxBlB,IAAY,GACZrB,EAAQmC,KAAK,aAOT,eAAC,IAAD,WACE,eAAC,GAAD,CAAgBrM,OAAK,EAACC,KAAK,IAAIhB,SAAUA,GAAzC,UACE,cAACwC,EAAD,CACEE,cAhMmB,WAE7B0I,GAA0B,IA+LhBzI,WA3LgB,WAE1B2I,GAAuB,IA0Lb7I,aAxMkB,WAE5B+I,GAAyB,IAuMf5I,MAAOA,EACPpB,YAxLY,SAACD,GAEvBqK,GAAoB,GAEpBI,EAAgBzK,IAqLNE,WAvIW,SAACF,GAEtB,IAAMkM,EAAUlM,EAAKU,MAAMC,MAAK,SAACC,GAAD,OAAUA,EAAKR,MAAQtB,EAAYsB,OAGnEuG,EACGwF,eAAenM,EAAKI,KAAM8L,GAC1Bf,MAAK,SAACiB,GAEL,IAAMC,EAAWhL,EAAMG,KAAI,SAACZ,GAAD,OAAWA,EAAKR,MAAQJ,EAAKI,IAAMgM,EAAUxL,KAGxE+J,EAAS0B,MAEVhB,MAAMC,QAAQC,MA0HPpL,aArFkB,SAACH,GAE7ByK,EAAgBzK,GAEhBmK,GAAiB,MAmFT,cAAC1I,EAAD,IACA,cAACiF,EAAD,CACE7E,OAAQiI,EACR3D,UAAWA,GACXrE,QAASgK,GACT1K,WA5GW,SAACpB,GAEtB4K,IAAa,GACbjE,EACG2F,QAAQtM,GACRmL,MAAK,SAACiB,GACLzB,EAAS,CAACyB,GAAF,mBAAc/K,KACtByK,QAEDT,MAAMC,QAAQC,KACdC,SAAQ,WACPZ,IAAa,SAmGT,cAAC1E,EAAD,CACErE,OAAQ+H,EACRzD,UAAWA,GACXrE,QAASgK,GACT1F,aArLa,SAACgF,GAExBR,IAAa,GACbjE,EACG4F,YAAYnB,GACZD,MAAK,SAACC,GACLV,EAAeU,GACfU,QAEDT,MAAMC,QAAQC,KACdC,SAAQ,WACPZ,IAAa,SA4KT,cAACpE,EAAD,CACE3E,OAAQmI,EACR7D,UAAWA,GACXrE,QAASgK,GACTrF,eA3Ke,SAAC2E,GAE1BR,IAAa,GACbjE,EACG6F,UAAUpB,GACVD,MAAK,SAACC,GACLV,EAAeU,GACfU,QAEDT,MAAMC,QAAQC,KACdC,SAAQ,WACPZ,IAAa,SAkKT,cAAChJ,EAAD,CAAY5B,KAAMwK,EAAc3I,OAAQuI,EAAkBtI,QAASgK,KACnE,cAACxD,EAAD,CACEzG,OAAQqI,EACR/D,UAAWA,GACXrE,QAASgK,GACThJ,SAhJa,WAEvB8H,IAAa,GACbjE,EACG8F,WAAWjC,EAAapK,KACxB+K,MAAK,WACJ,IAAMkB,EAAWhL,EAAMqL,QAAO,SAAC9L,GAAD,OAAUA,EAAKR,MAAQoK,EAAapK,OAClEuK,EAAS0B,GACTP,QAEDT,MAAMC,QAAQC,KACdC,SAAQ,WACPZ,IAAa,YAuIX,cAAC,IAAD,CAAOnL,KAAK,WAAZ,SACE,cAACiJ,GAAD,CAAOC,gBAhFW,SAACyC,GAC3BR,IAAa,GACb1B,GAAcyD,OAAOvB,GAClBD,MAAK,SAACpK,GAIL,OAHIA,EAAI6L,OACNlB,aAAamB,QAAQ,MAAO9L,EAAI6L,OAE3B7L,KAERoK,MAAK,SAACpK,GACLgK,IAAY,GACZE,GAAoBG,EAAK1L,UAE1B2L,OAAM,SAAClC,GACN2B,GAAoB,CAClB9B,SAAS,EACT/D,QAASkE,EAAMlE,aAGlBuG,SAAQ,WACPZ,IAAa,WA8DX,cAAC,IAAD,CAAOnL,KAAK,WAAZ,SACE,cAAC,GAAD,CAAQoJ,eAxGS,SAACuC,GAC1BR,IAAa,GACb1B,GAAc4D,OAAO1B,GAClBD,MAAK,SAACpK,GACL+J,GAAoB,CAClB9B,SAAS,EACT/D,QAAS,6KAGZoG,OAAM,SAAClC,GACN2B,GAAoB,CAClB9B,SAAS,EACT/D,QAASkE,EAAMlE,aAGlBuG,SAAQ,WACPZ,IAAa,cA2Fb,cAAC9B,GAAD,CAAaC,UAAW8B,GAAiB7B,QAC5B/D,QAAS4F,GAAiB5F,QAC1BpD,OAAQyI,EACRxI,QAASgK,WC9TfiB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.6a64ff1e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-logo.ff16f24b.svg\";","import { createContext } from 'react';\r\n\r\nexport const CurrentUserContext = createContext();\r\n","import React, { useContext, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Route } from \"react-router\";\r\nimport cn from \"classnames\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nexport default function Header({ logo, loggedIn, onExit }) {\r\n\r\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\r\n\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  const handleClickOnSwitch = () => {\r\n    setMenuIsOpen(!menuIsOpen);\r\n  };\r\n\r\n  const handleClickOnExit = () => {\r\n    onExit();\r\n  };\r\n\r\n\r\n  debugger;\r\n  return (\r\n    <header className={cn(\"header\", { header_compact: loggedIn })}>\r\n      <a href=\"#0\">\r\n        <img src={logo} alt=\"Логотип страницы Место.\" className=\"header__logo\"/>\r\n      </a>\r\n      <div className={cn(\r\n        \"header__navbar\",\r\n        { header__navbar_vertical: loggedIn, header__navbar_hidden: loggedIn && !menuIsOpen },\r\n      )}>\r\n        <Route exact path=\"/\">\r\n          <p className=\"header__email\">{currentUser.email}</p>\r\n          <NavLink to=\"/sign-in\" className=\"header__nlink\">\r\n            <button className=\"header__btn header__btn_type_exit\" onClick={handleClickOnExit}>\r\n              Выйти\r\n            </button>\r\n          </NavLink>\r\n        </Route>\r\n        <Route path=\"/sign-in\">\r\n          <NavLink to=\"/sign-up\" className=\"header__nlink\">Регистрация</NavLink>\r\n        </Route>\r\n        <Route path=\"/sign-up\">\r\n          <NavLink to=\"/sign-in\" className=\"header__nlink\">Войти</NavLink>\r\n        </Route>\r\n      </div>\r\n      {loggedIn && <button className={cn(\r\n        \"header__btn header__btn_type_switch\",\r\n        { header__btn_action_close: menuIsOpen, header__btn_action_open: !menuIsOpen },\r\n      )} onClick={handleClickOnSwitch}/>}\r\n    </header>\r\n  );\r\n}\r\n","import { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport React, { useContext } from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nexport default function Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  const handleClick = () => {\r\n    onCardClick(card);\r\n  };\r\n\r\n  const handleClickLike = () => {\r\n    onCardLike(card);\r\n  };\r\n\r\n  const handleClickDelete = () => {\r\n    onCardDelete(card);\r\n  };\r\n\r\n  return (\r\n    <li className=\"card\">\r\n      {currentUser._id === card.owner._id && (\r\n        <button className=\"card__btn card__btn_action_trush\" type=\"button\" onClick={handleClickDelete}/>\r\n      )}\r\n\r\n      <img src={card.link} alt={card.name} className=\"card__image\" onClick={handleClick}/>\r\n      <div className=\"card__footer\">\r\n        <h3 className=\"card__caption\">{card.name}</h3>\r\n        <div className=\"like card__like\">\r\n          <button\r\n            className={cn(\r\n              \"like__btn\",\r\n              { like__btn_active: card.likes.some((item) => item._id === currentUser._id) },\r\n            )}\r\n            onClick={handleClickLike}\r\n            type=\"button\"\r\n          />\r\n          <p className=\"like__count\" title={card.likes.reduce((res, item) => res += `${item.name}\\n`, \"\")}>\r\n            {card.likes.length}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nexport default function Main({\r\n  onEditAvatar,\r\n  onEditProfile,\r\n  onAddPlace,\r\n  cards,\r\n  onCardClick,\r\n  onCardLike,\r\n  onCardDelete,\r\n}) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <button className=\"profile__btn profile__btn_action_edit-avatar\" onClick={onEditAvatar}>\r\n          <img src={currentUser.avatar} alt=\"Аватар.\" className=\"profile__avatar\"/>\r\n          <span className=\"profile__avatar-overlay\"/>\r\n        </button>\r\n        <div className=\"profile__info\">\r\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n          <button className=\"profile__btn profile__btn_action_edit\" type=\"button\" onClick={onEditProfile}/>\r\n          <p className=\"profile__about\">{currentUser.about}</p>\r\n        </div>\r\n        <button className=\"profile__btn profile__btn_action_add\" type=\"button\" onClick={onAddPlace}/>\r\n      </section>\r\n      <section>\r\n        <ul className=\"cards\">\r\n          {cards.map((item) => {\r\n            return (\r\n              <Card\r\n                card={item}\r\n                onCardClick={onCardClick}\r\n                onCardLike={onCardLike}\r\n                onCardDelete={onCardDelete}\r\n                key={item._id}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">@ {new Date().getFullYear()} Попов Алексей</p>\n    </footer>\n  );\n}\n","import React from \"react\";\r\n\r\nexport default function ImagePopup({ card, isOpen, onClose }) {\r\n\r\n  const handleClickOnBackground = (evt) => {\r\n    if (evt.target === evt.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`popup popup_type_show ${isOpen ? \"popup_opened\" : \"\"}`} onClick={handleClickOnBackground}>\r\n      <div className=\"popup__container popup__container_type_show\">\r\n        <button className=\"popup__btn popup__btn_action_close\" type=\"button\" onClick={onClose}/>\r\n        <img src={card.link} alt={card.name} className=\"popup__image\"/>\r\n        <h3 className=\"popup__caption\">{card.name}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const propsPopupWithAddForm = {\r\n  title: \"Новое место\",\r\n  name: \"add\",\r\n  submitStates: {\r\n    static: \"Создать\",\r\n    loading: \"Создание...\",\r\n  },\r\n};\r\nexport const propsPopupWithEditForm = {\r\n  title: \"Редактировать профиль\",\r\n  name: \"edit\",\r\n  submitStates: {\r\n    static: \"Сохранить\",\r\n    loading: \"Сохранение...\",\r\n  },\r\n};\r\nexport const propsPopupWithEditAvatarForm = {\r\n  title: \"Обновить аватар\",\r\n  name: \"edit-avatar\",\r\n  submitStates: {\r\n    static: \"Сохранить\",\r\n    loading: \"Сохранение...\",\r\n  },\r\n};\r\nexport const propsPopupWithConfirmForm = {\r\n  title: \"Вы уверены?\",\r\n  name: \"confirm\",\r\n  submitStates: {\r\n    static: \"Да\",\r\n    loading: \"Удаление...\",\r\n  },\r\n};\r\n\r\nexport const propsAuthLogIn = {\r\n  title: \"Вход\",\r\n  name: \"login\",\r\n  submitStates: {\r\n    static: \"Войти\",\r\n    loading: \"Входим...\",\r\n  },\r\n};\r\n\r\nexport const propsAuthRegister = {\r\n  title: \"Регистрация\",\r\n  name: \"Register\",\r\n  submitStates: {\r\n    static: \"Зарегистрироваться\",\r\n    loading: \"Регистрируемся...\",\r\n  },\r\n};\r\n\r\nexport const apiSettings = {\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-16\",\r\n  headers: {\r\n    authorization: \"fcd9a632-5cad-436c-b58e-4c80d498006a\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nexport const apiSettingsAuth = {\r\n  baseUrlAuth: \"https://auth.nomoreparties.co\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\n\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nconst FormContext = createContext({});\r\n\r\nexport default function Form({\r\n  name,\r\n  className,\r\n  isOpen,\r\n  validators,\r\n  onSubmit,\r\n  defaultValues,\r\n  children,\r\n}) {\r\n\r\n  //Стейт всех значений формы\r\n  const [formValues, setFormValues] = useState({});\r\n  //Стейт отображения ошибок\r\n  const [showErrors, setShowErrors] = useState({});\r\n  //Стейт всех ошибок формы\r\n  const [formErrors, setFormErrors] = useState({});\r\n  //Создаем общий стейт для формы для включения/отключения submit\r\n  const [isInvalid, setIsInvalid] = useState(true);\r\n\r\n  //Устанавливаем значения формы в зависимости от дефолтного\r\n  //Так как дефолтные значения могут прийти после отрисовки с сервера, подключаем эффект на их изменение\r\n  useEffect(() => {\r\n    setFormValues(defaultValues);\r\n  }, [defaultValues]);\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) {\r\n      //Обнуляем стейт отображения ошибок\r\n      setShowErrors({});\r\n      //Устанавливаем дефолтные значения\r\n      setFormValues(defaultValues);\r\n    }\r\n  }, [isOpen, defaultValues]);\r\n\r\n  //Обработчик изменения любого инпута\r\n  const onChangeInput = (name, value) => {\r\n    //Обновляем стейт всех значений формы\r\n    setFormValues((prevValues) => ({ ...prevValues, [name]: value }));\r\n    //Добавляем эффект возникновения ошибки для пустых полей только после того, как пользователь уже вводил значения\r\n    if (value !== defaultValues[name]) {\r\n      setShowErrors((prevValues) => ({ ...prevValues, [name]: true }));\r\n    }\r\n  };\r\n\r\n  //Обработчик submit\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    //Обнуляем стейт отображения ошибок\r\n    setShowErrors({});\r\n    onSubmit(formValues);\r\n  };\r\n\r\n  //Вызываем валидацию на каждый ввод в форму\r\n  useEffect(() => {\r\n    //Получаем все ключи\r\n    const formKeys = Object.keys(formValues);\r\n\r\n    //Проверяем валидацию всех значений формы\r\n    const allErrors = formKeys\r\n      .map((key) => {\r\n        const valueByKey = formValues[key];\r\n        if (!validators[key]) {\r\n          return {};\r\n        }\r\n        const errors = Object.entries(validators[key])\r\n          .map(([errorKey, validatorFn]) => {\r\n            return { [errorKey]: validatorFn(valueByKey) };\r\n          })\r\n          .reduce((acc, item) => ({ ...acc, ...item }), {});\r\n        return { [key]: errors };\r\n      })\r\n      .reduce((acc, item) => ({ ...acc, ...item }), {});\r\n\r\n    //Устанавливаем стейт всех ошибок формы\r\n    setFormErrors(allErrors);\r\n  }, [formValues, validators]);\r\n\r\n  //Определение общей валидности формы\r\n  useEffect(() => {\r\n    for (const fileKey in formErrors) {\r\n      const keyErrors = formErrors[fileKey];\r\n      for (const errorKey in keyErrors) {\r\n        if (keyErrors[errorKey].valid === false) {\r\n          return setIsInvalid(true);\r\n        }\r\n      }\r\n    }\r\n    setIsInvalid(false);\r\n  }, [formErrors]);\r\n\r\n  //Заполняем контекст формы\r\n  const formContextValue = { onChangeInput, isInvalid, formErrors, showErrors, formValues };\r\n\r\n  return (\r\n    <form\r\n      className={className}\r\n      name={name}\r\n      onSubmit={handleSubmit}\r\n      noValidate\r\n    >\r\n      <FormContext.Provider value={formContextValue}>{children}</FormContext.Provider>\r\n    </form>\r\n  );\r\n}\r\n\r\n//Компонент поля формы\r\nexport function Field({ name, children }) {\r\n  //Получаем значения контекста формы\r\n  const { onChangeInput, formValues, formErrors, showErrors } = useContext(FormContext);\r\n\r\n  //Обработчик изменения инпута\r\n  const handleChangeInput = (e) => {\r\n    onChangeInput(name, e.target.value);\r\n  };\r\n\r\n  //Проверяем наличие ошибок по полю\r\n  const isInvalid = !!formErrors[name] &&\r\n    Object.keys(formErrors[name]).some((key) => formErrors[name][key].valid === false);\r\n\r\n  //Определяем ключ ошибки\r\n  const errorKey = (!!formErrors[name] ?\r\n                    Object.keys(formErrors[name]).find((key) => formErrors[name][key].valid === false) : \"\");\r\n\r\n  //Определяем сообщение ошибки\r\n  const errorMessage = !!errorKey ? formErrors[name][errorKey].message : \"\";\r\n\r\n  return children({\r\n    value: !formValues[name] ? \"\" : formValues[name],\r\n    isInvalid: isInvalid && showErrors[name],\r\n    errorMessage: errorMessage,\r\n    onChange: handleChangeInput,\r\n  });\r\n}\r\n\r\nexport function Submit({ children }) {\r\n  //Получаем значение валидности кнопки из формы\r\n  const { isInvalid } = useContext(FormContext);\r\n  return children({ disabled: isInvalid });\r\n}\r\n","import cn from \"classnames\";\r\nimport React from \"react\";\r\nimport Form, { Field, Submit } from \"./Form\";\r\n\r\nexport default function PopupWithForm({\r\n  title,\r\n  name,\r\n  isOpen,\r\n  isLoad,\r\n  submitStates,\r\n  validators,\r\n  onClose,\r\n  onSubmit,\r\n  children,\r\n  inputsList = [],\r\n  defaultValues,\r\n}) {\r\n\r\n  const handleClickOnBackground = (evt) => {\r\n    if (evt.target === evt.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const fieldsList = inputsList.map((item) => (\r\n      <Field key={`${name}-${item.name}`} name={item.name}>\r\n        {\r\n          ({ isInvalid, errorMessage, ...inputProps }) => (\r\n            <>\r\n              <input type=\"text\"\r\n                     className={\r\n                       cn(`popup__input popup__input_type_${item.name}`, {\r\n                         \"popup__input_type_error\": isInvalid,\r\n                       })\r\n                     }\r\n                     {...item}\r\n                     {...inputProps}/>\r\n              <span className={cn(\"popup__error\", { \"popup__error_visible\": isInvalid })}>\r\n             {isInvalid ? errorMessage : \"\"}\r\n            </span>\r\n            </>\r\n          )\r\n        }\r\n      </Field>\r\n    ),\r\n  );\r\n\r\n  return (\r\n    <div className={cn(`popup popup_type_${name}`, { popup_opened: isOpen })}\r\n         data-name={name}\r\n         onClick={handleClickOnBackground}\r\n    >\r\n      <Form\r\n        className=\"popup__container popup__container_type_form\"\r\n        name=\"container\"\r\n        onSubmit={onSubmit}\r\n        validators={validators}\r\n        defaultValues={defaultValues}\r\n        isOpen={isOpen}\r\n      >\r\n        <button\r\n          className=\"popup__btn popup__btn_action_close\"\r\n          type=\"button\"\r\n          onClick={onClose}\r\n        />\r\n        <h2 className=\"popup__title\">{title}</h2>\r\n        {fieldsList}\r\n        <Submit>\r\n          {\r\n            ({ disabled }) => (\r\n              <button\r\n                className={cn(\"popup__btn\", \"popup__btn_action_submit\", {\r\n                  popup__btn__disabled: disabled,\r\n                })}\r\n                type=\"submit\"\r\n                disabled={disabled}\r\n              >\r\n                {!isLoad ? submitStates.static : submitStates.loading}\r\n              </button>\r\n            )\r\n          }\r\n        </Submit>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport { propsPopupWithEditForm } from \"../utils/constants\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nconst validators = {\r\n  name: {\r\n    required: (value) => {\r\n      return {\r\n        valid: !!value,\r\n        message: \"Вы пропустили это поле.\",\r\n      };\r\n    },\r\n    minLength: (value) => {\r\n      return {\r\n        valid: value.length > 2,\r\n        message: `Минимальное количество символов: 2. Длина текста сейчас: ${value.length} символ.`,\r\n      };\r\n    },\r\n  },\r\n  about: {\r\n    required: (value) => {\r\n      return {\r\n        valid: !!value,\r\n        message: \"Вы пропустили это поле.\",\r\n      };\r\n    },\r\n    minLength: (value) => {\r\n      return {\r\n        valid: value.length > 2,\r\n        message: `Минимальное количество символов: 2. Длина текста сейчас: ${value.length} символ.`,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nconst inputsList = [\r\n  { name: \"name\", placeholder: \"Название\", maxLength: 30 },\r\n  { name: \"about\", placeholder: \"Описание профиля\", maxLength: 200 },\r\n];\r\n\r\nexport default function EditProfilePopup({ isOpen, isLoading, onClose, onUpdateUser }) {\r\n  const handleSubmit = (values) => {\r\n    onUpdateUser(values);\r\n  };\r\n\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title={propsPopupWithEditForm.title}\r\n      name={propsPopupWithEditForm.name}\r\n      isOpen={isOpen}\r\n      isLoad={isLoading}\r\n      submitStates={propsPopupWithEditForm.submitStates}\r\n      validators={validators}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      defaultValues={currentUser}\r\n      inputsList={inputsList}\r\n    />\r\n  );\r\n}\r\n","import { propsPopupWithEditAvatarForm } from \"../utils/constants\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport React from \"react\";\r\n\r\nconst validators = {\r\n  link: {\r\n    required: (value) => {\r\n      return { valid: !!value, message: \"Вы пропустили это поле.\" };\r\n    },\r\n    isUrl: (value) => {\r\n      return { valid: /http(s?):\\/\\/[-\\w.]{3,}\\.[A-Za-z]{2,3}/.test(value), message: \"Введите адрес сайта.\" };\r\n    },\r\n  },\r\n};\r\n\r\nconst inputsList = [\r\n  { name: \"link\", placeholder: \"Ссылка на картинку\" },\r\n];\r\n\r\nexport default function EditAvatarPopup({ isOpen, isLoading, onClose, onUpdateAvatar }) {\r\n  const handleSubmit = (values) => {\r\n    onUpdateAvatar(values);\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title={propsPopupWithEditAvatarForm.title}\r\n      name={propsPopupWithEditAvatarForm.name}\r\n      isLoad={isLoading}\r\n      isOpen={isOpen}\r\n      submitStates={propsPopupWithEditAvatarForm.submitStates}\r\n      validators={validators}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      defaultValues={{ link: \"\" }}\r\n      inputsList={inputsList}\r\n    />\r\n  );\r\n}\r\n","import { propsPopupWithAddForm } from \"../utils/constants\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport React from \"react\";\r\n\r\nconst validators = {\r\n  name: {\r\n    required: (value) => {\r\n      return { valid: value !== \"\", message: \"Вы пропустили это поле.\" };\r\n    },\r\n    minLength: (value) => {\r\n      return {\r\n        valid: value.length > 2,\r\n        message: `Минимальное количество символов: 2. Длина текста сейчас: ${value.length} символ.`,\r\n      };\r\n    },\r\n  },\r\n  link: {\r\n    required: (value) => {\r\n      return { valid: value !== \"\", message: \"Вы пропустили это поле.\" };\r\n    },\r\n    isUrl: (value) => {\r\n      return { valid: /http(s?):\\/\\/[-\\w.]{3,}\\.[A-Za-z]{2,3}/.test(value), message: \"Введите адрес сайта.\" };\r\n    },\r\n  },\r\n};\r\n\r\nconst inputsList = [\r\n  { name: \"name\", placeholder: \"Название\", maxLength: 30 },\r\n  { name: \"link\", placeholder: \"Ссылка на картинку\" },\r\n];\r\n\r\nexport default function AddPlacePopup({ isOpen, isLoading, onClose, onAddPlace }) {\r\n  const handleSubmit = (values) => {\r\n    onAddPlace(values);\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title={propsPopupWithAddForm.title}\r\n      name={propsPopupWithAddForm.name}\r\n      isLoad={isLoading}\r\n      isOpen={isOpen}\r\n      submitStates={propsPopupWithAddForm.submitStates}\r\n      validators={validators}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      defaultValues={\r\n        {\r\n          name: \"\",\r\n          link: \"\",\r\n        }\r\n      }\r\n      inputsList={inputsList}\r\n    />\r\n  );\r\n}\r\n","import { apiSettings } from \"./constants.js\";\r\n\r\nclass Api {\r\n  constructor({ baseUrl, baseUrlAuth, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._baseUrlAuth = baseUrlAuth;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _getProxy(relativePath, method, body = \"\") {\r\n    const options = {\r\n      method,\r\n      headers: this._headers,\r\n    };\r\n\r\n    if (!!body) {\r\n      options.body = body;\r\n    }\r\n\r\n    return fetch(`${this._baseUrl}${relativePath}`, options);\r\n  }\r\n\r\n  async _handleResponse(response) {\r\n    const description = await response.json();\r\n\r\n    if (response.ok) {\r\n      return description;\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${response.status}\\nОписание: ${description.message}`);\r\n    }\r\n  }\r\n\r\n  async getUserData() {\r\n    const response = await this._getProxy(\"/users/me\", \"GET\");\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async setUserData({ name, about }) {\r\n    const response = await this._getProxy(\"/users/me\", \"PATCH\", JSON.stringify({ name, about }));\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async setAvatar({ link }) {\r\n    const response = await this._getProxy(\"/users/me/avatar\", \"PATCH\", JSON.stringify({ avatar: link }));\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async getCardList() {\r\n    const response = await this._getProxy(\"/cards\", \"GET\");\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async addCard({ name, link }) {\r\n    const response = await this._getProxy(\"/cards\", \"POST\", JSON.stringify({ name, link }));\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async deleteCard(id) {\r\n    const response = await this._getProxy(`/cards/${id}`, \"DELETE\");\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async toggleCardLike(id, like) {\r\n    const response = await this._getProxy(`/cards/likes/${id}`, like ? \"PUT\" : \"DELETE\");\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n}\r\n\r\nexport const apiObject = new Api(apiSettings);\r\n","import PopupWithForm from \"./PopupWithForm\";\r\nimport { propsPopupWithConfirmForm } from \"../utils/constants.js\";\r\nimport React from \"react\";\r\n\r\nexport default function Confirm({ isOpen, isLoading, onClose, onSubmit }) {\r\n  const handleSubmit = () => {\r\n    onSubmit();\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title={propsPopupWithConfirmForm.title}\r\n      name={propsPopupWithConfirmForm.name}\r\n      submitStates={propsPopupWithConfirmForm.submitStates}\r\n      isOpen={isOpen}\r\n      isLoad={isLoading}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      defaultValues={{}}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Form, { Field, Submit } from \"./Form\";\r\nimport cn from \"classnames\";\r\n\r\nexport default function Auth({ name, title, submitStates, isLoading, children, inputsList = [], validators, onSubmit }) {\r\n\r\n  const fieldsList = inputsList.map((item) => (\r\n      <Field key={`${name}-${item.name}`} name={item.name}>\r\n        {\r\n          ({ isInvalid, errorMessage, ...inputProps }) => (\r\n            <>\r\n              <input type=\"text\"\r\n                     className={\r\n                       cn(`auth__input auth__input_type_${item.name}`, {\r\n                         \"auth__input_error\": isInvalid,\r\n                       })\r\n                     }\r\n                     {...item}\r\n                     {...inputProps}/>\r\n              <span className={cn(\"auth__error\", { \"auth__error_visible\": isInvalid })}>\r\n             {isInvalid ? errorMessage : \"\"}\r\n            </span>\r\n            </>\r\n          )\r\n        }\r\n      </Field>\r\n    ),\r\n  );\r\n\r\n  return (\r\n    <Form\r\n      className=\"auth\"\r\n      name=\"container\"\r\n      onSubmit={onSubmit}\r\n      validators={validators}\r\n      defaultValues={{\r\n        email: \"\",\r\n        password: \"\",\r\n      }}\r\n      isOpen={true}\r\n    >\r\n      <p className=\"auth__title\">{title}</p>\r\n      <fieldset className=\"auth__fieldset\">\r\n        {fieldsList}\r\n      </fieldset>\r\n      <Submit>\r\n        {\r\n          ({ disabled }) => (\r\n            <button\r\n              className={cn(\"auth__btn\", \"auth__btn_action_submit\", {\r\n                auth__btn_disabled: disabled,\r\n              })}\r\n              type=\"submit\"\r\n              disabled={disabled}\r\n            >\r\n              {!isLoading ? submitStates.static : submitStates.loading}\r\n            </button>\r\n          )\r\n        }\r\n      </Submit>\r\n      {children}\r\n    </Form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Auth from \"./Auth\";\r\nimport { propsAuthLogIn } from \"../utils/constants\";\r\n\r\nconst validators = {\r\n  email: {\r\n    required: (value) => {\r\n      return {\r\n        valid: !!value,\r\n        message: \"Вы пропустили это поле.\",\r\n      };\r\n    },\r\n    minLength: (value) => {\r\n      return {\r\n        valid: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value),\r\n        message: `Некорректный e-mail`,\r\n      };\r\n    },\r\n  },\r\n  password: {\r\n    required: (value) => {\r\n      return {\r\n        valid: !!value,\r\n        message: \"Вы пропустили это поле.\",\r\n      };\r\n    },\r\n    minLength: (value) => {\r\n      return {\r\n        valid: value.length > 7,\r\n        message: `Минимальное количество символов: 8. Длина текста сейчас: ${value.length} символ.`,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nconst inputsList = [\r\n  { name: \"email\", placeholder: \"Email\"},\r\n  { name: \"password\", placeholder: \"Пароль\"},\r\n];\r\n\r\nexport default function Login({onAuthorization}) {\r\n  return (\r\n    <Auth name={propsAuthLogIn.name}\r\n          title={propsAuthLogIn.title}\r\n          submitStates={propsAuthLogIn.submitStates}\r\n          isLoading={false}\r\n          validators={validators}\r\n          inputsList={inputsList}\r\n          onSubmit={onAuthorization}/>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Auth from \"./Auth\";\r\nimport { propsAuthRegister } from \"../utils/constants\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst validators = {\r\n  email: {\r\n    required: (value) => {\r\n      return {\r\n        valid: !!value,\r\n        message: \"Вы пропустили это поле.\",\r\n      };\r\n    },\r\n    minLength: (value) => {\r\n      return {\r\n        valid: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value),\r\n        message: `Некорректный e-mail`,\r\n      };\r\n    },\r\n  },\r\n  password: {\r\n    required: (value) => {\r\n      return {\r\n        valid: !!value,\r\n        message: \"Вы пропустили это поле.\",\r\n      };\r\n    },\r\n    minLength: (value) => {\r\n      return {\r\n        valid: value.length > 7,\r\n        message: `Минимальное количество символов: 8. Длина текста сейчас: ${value.length} символ.`,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nconst inputsList = [\r\n  { name: \"email\", placeholder: \"Email\" },\r\n  { name: \"password\", placeholder: \"Пароль\" },\r\n];\r\n\r\nexport default function Register({onRegistration}) {\r\n\r\n  return (\r\n    <Auth name={propsAuthRegister.name}\r\n          title={propsAuthRegister.title}\r\n          submitStates={propsAuthRegister.submitStates}\r\n          isLoading={false}\r\n          validators={validators}\r\n          inputsList={inputsList}\r\n          onSubmit={onRegistration}>\r\n      <NavLink to=\"/sign-in\" className=\"auth__link\">Уже зарегистрированы? Войти</NavLink>\r\n    </Auth>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/failure.d4ce2a26.svg\";","export default __webpack_public_path__ + \"static/media/success.a9eb6caf.svg\";","import React from \"react\";\r\nimport failure from \"../images/failure.svg\";\r\nimport success from \"../images/success.svg\";\r\n\r\nexport default function InfoTooltip({ isSuccess, message, isOpen, onClose }) {\r\n\r\n  const handleClickOnBackground = (evt) => {\r\n    if (evt.target === evt.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`popup ${isOpen ? \"popup_opened\" : \"\"}`} onClick={handleClickOnBackground}>\r\n      <div className=\"popup__container popup__container_type_form popup__container_align_center\">\r\n        <button className=\"popup__btn popup__btn_action_close\" type=\"button\" onClick={onClose}/>\r\n        <img src={isSuccess ? success : failure} alt=\"Результат авторизации\" className=\"popup__info-icon\"/>\r\n        <h3 className=\"popup__title popup__title_align_center\">{message}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { apiSettingsAuth } from \"./constants.js\";\r\n\r\nclass Api {\r\n  constructor({ baseUrlAuth, headers }) {\r\n    this._baseUrl = baseUrlAuth;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _getProxy({ relativePath, method, body = \"\", headers = {} }) {\r\n    const options = {\r\n      method,\r\n      headers: { ...this._headers, ...headers },\r\n    };\r\n\r\n    if (!!body) {\r\n      options.body = body;\r\n    }\r\n\r\n    return fetch(`${this._baseUrl}${relativePath}`, options);\r\n  }\r\n\r\n  async _handleResponse(response) {\r\n    const description = await response.json();\r\n\r\n    if (response.ok) {\r\n      return description;\r\n    } else {\r\n      return Promise.reject({\r\n        status: response.status,\r\n        message: description.message ? description.message : description.error\r\n                                                             ? description.error\r\n                                                             : \"Что-то пошло не так!\\nПопробуйте ещё раз.\",\r\n      });\r\n    }\r\n  }\r\n\r\n  async tokenCheck({ jwt }) {\r\n    const params = {\r\n      relativePath: \"/users/me\",\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${jwt}`,\r\n      },\r\n    };\r\n    const response = await this._getProxy(params);\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async signUp({ password, email }) {\r\n    const params = {\r\n      relativePath: \"/signup\",\r\n      method: \"POST\",\r\n      body: JSON.stringify({ password, email }),\r\n    };\r\n    const response = await this._getProxy(params);\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async signIn({ password, email }) {\r\n    const params = {\r\n      relativePath: \"/signin\",\r\n      method: \"POST\",\r\n      body: JSON.stringify({ password, email }),\r\n    };\r\n    const response = await this._getProxy(params);\r\n    return await this._handleResponse(response);\r\n  }\r\n}\r\n\r\nexport const apiAuthObject = new Api(apiSettingsAuth);\r\n","import { Redirect, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst ProtectedRoute = ({ children, ...props }) => {\r\n  return (\r\n    <Route>\r\n      {\r\n        () => props.loggedIn ? children : <Redirect to=\"/sign-in\"/>\r\n      }\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport importedLogo from \"../images/header-logo.svg\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport { apiObject } from \"../utils/api\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport Confirm from \"./Confirm\";\r\nimport Login from \"./Login\";\r\nimport SignUp from \"./Register\";\r\nimport InfoTooltip from \"./InfoTooltip\";\r\nimport { apiAuthObject } from \"../utils/apiAuth\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\n\r\nfunction App() {\r\n  const history = useHistory();\r\n\r\n  //Создаем стейты\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\r\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [cards, setCards] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [infoTooltipProps, setInfoTooltipProps] = useState({});\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [currentUserEmail, setCurrentUserEmail] = useState(\"\");\r\n\r\n  //Загружаем данные карточек один раз при сборке\r\n  useEffect(() => {\r\n    apiObject\r\n      .getCardList()\r\n      .then((data) => {\r\n        setCards(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n      .finally(() => {\r\n      });\r\n  }, []);\r\n\r\n  //Загружаем данные пользователя\r\n  useEffect(() => {\r\n    apiObject\r\n      .getUserData()\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n      });\r\n  }, []);\r\n\r\n  //Проверяем токен в локальном хранилище\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"jwt\")) {\r\n      const jwt = localStorage.getItem(\"jwt\");\r\n      // здесь будем проверять токен\r\n      apiAuthObject\r\n        .tokenCheck({ jwt })\r\n        .then(({ data }) => {\r\n          setLoggedIn(true);\r\n          setCurrentUserEmail(data.email);\r\n        })\r\n        .catch(console.log)\r\n        .finally(() => {\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [loggedIn, history])\r\n\r\n  //Обработчик нажатия на аватарку\r\n  const handleEditAvatarClick = () => {\r\n    //Открываем попап редактирования аватара\r\n    setIsEditAvatarPopupOpen(true);\r\n  };\r\n\r\n  //Обработчик нажатия на кнопку редактирования профиля\r\n  const handleEditProfileClick = () => {\r\n    //Открываем попап редактирования профиля\r\n    setIsEditProfilePopupOpen(true);\r\n  };\r\n\r\n  //Обработчик нажатия на кнопку добавления новой карточки\r\n  const handleAddPlaceClick = () => {\r\n    //Открываем попап добавления новой карточки\r\n    setIsAddPlacePopupOpen(true);\r\n  };\r\n\r\n  //Обработчик нажатия на карточку\r\n  const handleCardClick = (card) => {\r\n    //Открываем попап картинки\r\n    setIsImagePopupOpen(true);\r\n    //Устанавливаем выбранную карточку как текущую, для отображения в попапе\r\n    setSelectedCard(card);\r\n  };\r\n\r\n  //Обработчик закрытия всех попапов\r\n  const closeAllPopups = () => {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsConfirmOpen(false);\r\n    setIsImagePopupOpen(false);\r\n    setIsInfoTooltipOpen(false);\r\n  };\r\n\r\n  //Обработчик обновления данных пользователя\r\n  const handleUpdateUser = (data) => {\r\n    //Отправляем новые данные на сервер\r\n    setIsLoading(true);\r\n    apiObject\r\n      .setUserData(data)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n        closeAllPopups();\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //Обработчик обновления аватара\r\n  const handleUpdateAvatar = (data) => {\r\n    //Отправляем новые данные\r\n    setIsLoading(true);\r\n    apiObject\r\n      .setAvatar(data)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n        closeAllPopups();\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //функция обработчик установки/снятия лайка\r\n  const handleCardLike = (card) => {\r\n    //Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some((item) => item._id === currentUser._id);\r\n\r\n    //Отправляем запрос в API и получаем обновленные данные карточки\r\n    apiObject\r\n      .toggleCardLike(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        //формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n        const newCards = cards.map((item) => (item._id === card._id ? newCard : item));\r\n\r\n        //обновляем стейт\r\n        setCards(newCards);\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  //функция обработчик удаления карточки\r\n  const handleCardDelete = () => {\r\n    //Отправляем запрос на удаление карточки\r\n    setIsLoading(true);\r\n    apiObject\r\n      .deleteCard(selectedCard._id)\r\n      .then(() => {\r\n        const newCards = cards.filter((item) => item._id !== selectedCard._id);\r\n        setCards(newCards);\r\n        closeAllPopups();\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //Обработчик добавления новой карточки\r\n  const handleAddPlace = (card) => {\r\n    //Отправляем запрос на добавление карточки\r\n    setIsLoading(true);\r\n    apiObject\r\n      .addCard(card)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //Обработчик нажатия на кнопку удаления\r\n  const handleClickCardDelete = (card) => {\r\n    //Указываем текущую карточку, чтобы её удалить\r\n    setSelectedCard(card);\r\n    //Закрываем попап\r\n    setIsConfirmOpen(true);\r\n  };\r\n\r\n  const handleClickOnButton = (evt) => {\r\n    if (evt.key === \"Escape\") {\r\n      closeAllPopups();\r\n    }\r\n  };\r\n\r\n  //Обработчик регистрации\r\n  const handleRegistration = (data) => {\r\n    setIsLoading(true);\r\n    apiAuthObject.signUp(data)\r\n      .then((res) => {\r\n        setInfoTooltipProps({\r\n          success: true,\r\n          message: \"Вы успешно зарегистрировались!\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setInfoTooltipProps({\r\n          success: false,\r\n          message: error.message,\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //Обработчик авторизации\r\n  const handleAuthorization = (data) => {\r\n    setIsLoading(true);\r\n    apiAuthObject.signIn(data)\r\n      .then((res) => {\r\n        if (res.token) {\r\n          localStorage.setItem(\"jwt\", res.token);\r\n        }\r\n        return res;\r\n      })\r\n      .then((res) => {\r\n        setLoggedIn(true);\r\n        setCurrentUserEmail(data.email);\r\n      })\r\n      .catch((error) => {\r\n        setInfoTooltipProps({\r\n          success: false,\r\n          message: error.message,\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //Эффект открытия попапа с информацией после действий регистрации и авторизации\r\n  useEffect(() => {\r\n    if (Object.keys(infoTooltipProps).length > 0) {\r\n      setIsInfoTooltipOpen(true);\r\n    }\r\n  }, [infoTooltipProps]);\r\n\r\n  const handleExit = () => {\r\n    localStorage.removeItem('jwt');\r\n    setLoggedIn(false);\r\n    history.push('/login');\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={{ ...currentUser, email: currentUserEmail }}>\r\n      <div className=\"page\" onKeyDown={handleClickOnButton}>\r\n        <Header logo={importedLogo} loggedIn={loggedIn} onExit={handleExit}/>\r\n        <Switch>\r\n          <ProtectedRoute exact path=\"/\" loggedIn={loggedIn}>\r\n            <Main\r\n              onEditProfile={handleEditProfileClick}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              cards={cards}\r\n              onCardClick={handleCardClick}\r\n              onCardLike={handleCardLike}\r\n              onCardDelete={handleClickCardDelete}\r\n            />\r\n            <Footer/>\r\n            <AddPlacePopup\r\n              isOpen={isAddPlacePopupOpen}\r\n              isLoading={isLoading}\r\n              onClose={closeAllPopups}\r\n              onAddPlace={handleAddPlace}\r\n            />\r\n            <EditProfilePopup\r\n              isOpen={isEditProfilePopupOpen}\r\n              isLoading={isLoading}\r\n              onClose={closeAllPopups}\r\n              onUpdateUser={handleUpdateUser}\r\n            />\r\n            <EditAvatarPopup\r\n              isOpen={isEditAvatarPopupOpen}\r\n              isLoading={isLoading}\r\n              onClose={closeAllPopups}\r\n              onUpdateAvatar={handleUpdateAvatar}\r\n            />\r\n            <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={closeAllPopups}/>\r\n            <Confirm\r\n              isOpen={isConfirmOpen}\r\n              isLoading={isLoading}\r\n              onClose={closeAllPopups}\r\n              onSubmit={handleCardDelete}\r\n            />\r\n          </ProtectedRoute>\r\n          <Route path=\"/sign-in\">\r\n            <Login onAuthorization={handleAuthorization}/>\r\n          </Route>\r\n          <Route path=\"/sign-up\">\r\n            <SignUp onRegistration={handleRegistration}/>\r\n          </Route>\r\n        </Switch>\r\n        <InfoTooltip isSuccess={infoTooltipProps.success}\r\n                     message={infoTooltipProps.message}\r\n                     isOpen={isInfoTooltipOpen}\r\n                     onClose={closeAllPopups}/>\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <React.StrictMode>\r\n      <App/>\r\n    </React.StrictMode>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}