{"version":3,"sources":["images/header-logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/constants.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","components/Confirm.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","logo","className","href","src","alt","CurrentUserContext","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","_id","owner","type","onClick","link","name","cn","like__btn_active","likes","some","item","title","reduce","res","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","avatar","about","map","Footer","Date","getFullYear","ImagePopup","isOpen","onClose","propsPopupWithAddForm","submitStates","static","loading","propsPopupWithEditForm","propsPopupWithEditAvatarForm","propsPopupWithConfirmForm","PopupWithFormContext","PopupWithForm","isLoad","validators","onSubmit","children","defaultValues","useState","formValues","setFormValues","showErrors","setShowErrors","formErrors","setFormErrors","isInvalid","setIsInvalid","useEffect","allErrors","Object","keys","key","valueByKey","errors","entries","errorKey","validatorFn","acc","fileKey","keyErrors","valid","formContextValue","onChangeInput","value","prevValues","popup_opened","data-name","evt","preventDefault","noValidate","Provider","popup__btn__disabled","disabled","Field","errorClassName","props","onChange","e","target","Error","find","errorMessage","message","required","minLength","EditProfilePopup","isLoading","onUpdateUser","values","placeholder","maxLength","isUrl","test","EditAvatarPopup","onUpdateAvatar","AddPlacePopup","apiObject","baseUrl","headers","this","_baseUrl","_headers","relativePath","method","body","options","fetch","response","json","description","ok","Promise","reject","status","_getProxy","_handleResponse","JSON","stringify","id","like","authorization","Confirm","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmOpen","setIsConfirmOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setIsLoading","getCardList","then","data","catch","error","console","log","finally","getUserData","closeAllPopups","importedLogo","isLiked","toggleCardLike","newCard","newCards","addCard","setUserData","setAvatar","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc4cdd19.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-logo.ff16f24b.svg\";","import React from \"react\";\n\nexport default function Header({ logo }) {\n  return (\n    <header className=\"header\">\n      <a href=\"#0\">\n        <img src={logo} alt=\"Логотип страницы Место.\" className=\"header__logo\" />\n      </a>\n    </header>\n  );\n}\n","import { createContext } from 'react';\r\n\r\nexport const CurrentUserContext = createContext();\r\n","import { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport React, { useContext } from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nexport default function Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  const handleClick = () => {\r\n    onCardClick(card);\r\n  };\r\n\r\n  const handleClickLike = () => {\r\n    onCardLike(card);\r\n  };\r\n\r\n  const handleClickDelete = () => {\r\n    onCardDelete(card);\r\n  };\r\n\r\n  return (\r\n    <li className=\"card\">\r\n      {currentUser._id === card.owner._id && (\r\n        <button className=\"card__btn card__btn_action_trush\" type=\"button\" onClick={handleClickDelete}/>\r\n      )}\r\n\r\n      <img src={card.link} alt={card.name} className=\"card__image\" onClick={handleClick}/>\r\n      <div className=\"card__footer\">\r\n        <h3 className=\"card__caption\">{card.name}</h3>\r\n        <div className=\"like card__like\">\r\n          <button\r\n            className={cn(\r\n              \"like__btn\",\r\n              { like__btn_active: card.likes.some((item) => item._id === currentUser._id) },\r\n            )}\r\n            onClick={handleClickLike}\r\n            type=\"button\"\r\n          />\r\n          <p className=\"like__count\" title={card.likes.reduce((res, item) => res += `${item.name}\\n`, \"\")}>\r\n            {card.likes.length}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nexport default function Main({\r\n  onEditAvatar,\r\n  onEditProfile,\r\n  onAddPlace,\r\n  cards,\r\n  onCardClick,\r\n  onCardLike,\r\n  onCardDelete,\r\n}) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <button className=\"profile__btn profile__btn_action_edit-avatar\" onClick={onEditAvatar}>\r\n          <img src={currentUser.avatar} alt=\"Аватар.\" className=\"profile__avatar\"/>\r\n          <span className=\"profile__avatar-overlay\"/>\r\n        </button>\r\n        <div className=\"profile__info\">\r\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n          <button className=\"profile__btn profile__btn_action_edit\" type=\"button\" onClick={onEditProfile}/>\r\n          <p className=\"profile__about\">{currentUser.about}</p>\r\n        </div>\r\n        <button className=\"profile__btn profile__btn_action_add\" type=\"button\" onClick={onAddPlace}/>\r\n      </section>\r\n      <section>\r\n        <ul className=\"cards\">\r\n          {cards.map((item) => {\r\n            return (\r\n              <Card\r\n                card={item}\r\n                onCardClick={onCardClick}\r\n                onCardLike={onCardLike}\r\n                onCardDelete={onCardDelete}\r\n                key={item._id}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">@ {new Date().getFullYear()} Попов Алексей</p>\n    </footer>\n  );\n}\n","import React from \"react\";\n\nexport default function ImagePopup({ card, isOpen, onClose }) {\n  return (\n    <div className={`popup popup_type_show ${isOpen ? 'popup_opened' : ''}`}>\n      <div className=\"popup__container popup__container_type_show\">\n        <button className=\"popup__btn popup__btn_action_close\" type=\"button\" onClick={onClose}/>\n        <img src={card.link} alt={card.name} className=\"popup__image\" />\n        <h3 className=\"popup__caption\">{card.name}</h3>\n      </div>\n    </div>\n  );\n}\n","export const propsPopupWithAddForm = {\n  title: 'Новое место',\n  name: 'add',\n  submitStates: {\n    static: 'Создать',\n    loading: 'Создание...',\n  },\n};\nexport const propsPopupWithEditForm = {\n  title: 'Редактировать профиль',\n  name: 'edit',\n  submitStates: {\n    static: 'Сохранить',\n    loading: 'Сохранение...',\n  },\n};\nexport const propsPopupWithEditAvatarForm = {\n  title: 'Обновить аватар',\n  name: 'edit-avatar',\n  submitStates: {\n    static: 'Сохранить',\n    loading: 'Сохранение...',\n  },\n};\nexport const propsPopupWithConfirmForm = {\n  title: 'Вы уверены?',\n  name: 'confirm',\n  submitStates: {\n    static: 'Да',\n    loading: 'Удаление...',\n  },\n};\n\nexport const validationSettings = {\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__btn_action_submit',\n  inactiveButtonClass: 'popup__btn__disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible',\n};\n\nexport const apiSettings = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-16',\n  headers: {\n    authorization: 'fcd9a632-5cad-436c-b58e-4c80d498006a',\n    'Content-Type': 'application/json',\n  },\n};\n","import cn from \"classnames\";\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nconst PopupWithFormContext = createContext({});\r\n\r\nexport default function PopupWithForm({\r\n  title,\r\n  name,\r\n  isOpen,\r\n  isLoad,\r\n  submitStates,\r\n  validators,\r\n  onClose,\r\n  onSubmit,\r\n  children,\r\n  defaultValues,\r\n}) {\r\n\r\n  //Стейт всех значений формы\r\n  const [formValues, setFormValues] = useState({});\r\n  //Стейт отображения ошибок\r\n  const [showErrors, setShowErrors] = useState({});\r\n  //Стейт всех ошибок формы\r\n  const [formErrors, setFormErrors] = useState({});\r\n  //Создаем общий стейт для формы для включения/отключения submit\r\n  const [isInvalid, setIsInvalid] = useState(true);\r\n\r\n  //Устанавливаем значения формы в зависимости от дефолтного\r\n  //Так как дефолтные значения могут прийти после отрисовки с сервера, подключаем эффект на их изменение\r\n  useEffect(() => {\r\n    setFormValues(defaultValues);\r\n  }, [defaultValues]);\r\n\r\n  //Обработчик изменения любого инпута\r\n  const onChangeInput = (name, value) => {\r\n    //Обновляем стейт всех значений формы\r\n    setFormValues((prevValues) => ({ ...prevValues, [name]: value }));\r\n    //Добавляем эффект возникновения ошибки для пустых полей только после того, как пользователь уже вводил значения\r\n    if (value !== defaultValues[name]) {\r\n      setShowErrors((prevValues) => ({ ...prevValues, [name]: true }));\r\n    }\r\n  };\r\n\r\n  //Обработчик submit\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    onSubmit(formValues);\r\n  };\r\n\r\n  //Обработчик закрытия\r\n  const handleClose = () => {\r\n    //Обнуляем стейт отображения ошибок\r\n    setShowErrors({});\r\n    //Устанавливаем дефолтные значения\r\n    setFormValues(defaultValues);\r\n    //Закрываем\r\n    onClose();\r\n  };\r\n\r\n  //Вызываем валидацию на каждый ввод в форму\r\n  useEffect(() => {\r\n    //Получаем все ключи\r\n    const formKeys = Object.keys(formValues);\r\n\r\n    //Проверяем валидацию всех значений формы\r\n    const allErrors = formKeys\r\n      .map((key) => {\r\n        const valueByKey = formValues[key];\r\n        if (!validators[key]) {\r\n          return {};\r\n        }\r\n        const errors = Object.entries(validators[key])\r\n          .map(([errorKey, validatorFn]) => {\r\n            return { [errorKey]: validatorFn(valueByKey) };\r\n          })\r\n          .reduce((acc, item) => ({ ...acc, ...item }), {});\r\n        return { [key]: errors };\r\n      })\r\n      .reduce((acc, item) => ({ ...acc, ...item }), {});\r\n\r\n    //Устанавливаем стейт всех ошибок формы\r\n    setFormErrors(allErrors);\r\n  }, [formValues, validators]);\r\n\r\n  //Определение общей валидности формы\r\n  useEffect(() => {\r\n    for (const fileKey in formErrors) {\r\n      const keyErrors = formErrors[fileKey];\r\n      for (const errorKey in keyErrors) {\r\n        if (keyErrors[errorKey].valid === false) {\r\n          return setIsInvalid(true);\r\n        }\r\n      }\r\n    }\r\n    setIsInvalid(false);\r\n  }, [formErrors]);\r\n\r\n  //Заполняем контекст формы\r\n  const formContextValue = { onChangeInput, isInvalid, formErrors, showErrors, formValues };\r\n\r\n  return (\r\n    <div className={cn(`popup popup_type_${name}`, { popup_opened: isOpen })} data-name={name}>\r\n      <form\r\n        className=\"popup__container popup__container_type_form\"\r\n        name=\"container\"\r\n        onSubmit={handleSubmit}\r\n        noValidate\r\n      >\r\n        <button\r\n          className=\"popup__btn popup__btn_action_close\"\r\n          type=\"button\"\r\n          onClick={handleClose}\r\n        />\r\n        <h2 className=\"popup__title\">{title}</h2>\r\n        <PopupWithFormContext.Provider value={formContextValue}>{children}</PopupWithFormContext.Provider>\r\n        <button\r\n          className={cn(\"popup__btn\", \"popup__btn_action_submit\", {\r\n            popup__btn__disabled: isInvalid,\r\n          })}\r\n          type=\"submit\"\r\n          disabled={isInvalid}\r\n        >\r\n          {!isLoad ? submitStates.static : submitStates.loading}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n//Компонент поля формы\r\nexport function Field({ name, className = \"\", errorClassName = \"\", ...props }) {\r\n  //Получаем значения контекста формы\r\n  const { onChangeInput, formValues, formErrors, showErrors } = useContext(PopupWithFormContext);\r\n\r\n  //Обработчик изменения инпута\r\n  const handleChangeInput = (e) => {\r\n    onChangeInput(name, e.target.value);\r\n  };\r\n\r\n  //Проверяем наличие ошибок по полю\r\n  const isInvalid = !!formErrors[name] &&\r\n    Object.keys(formErrors[name]).some((key) => formErrors[name][key].valid === false);\r\n\r\n  return (\r\n    <input name={name}\r\n           value={!formValues[name] ? \"\" : formValues[name]}\r\n           className={\r\n             cn(className, {\r\n               [errorClassName]: isInvalid && showErrors[name],\r\n             })\r\n           }\r\n           onChange={handleChangeInput}\r\n           {...props}/>\r\n  );\r\n}\r\n\r\n//Компонент ошибки формы\r\nexport function Error({ name, className = \"\", errorClassName = \"\", ...props }) {\r\n  //Получаем значения контекста формы\r\n  const { formErrors, showErrors } = useContext(PopupWithFormContext);\r\n\r\n  //Определяем ключ ошибки\r\n  const errorKey = (!!formErrors[name] ?\r\n                    Object.keys(formErrors[name]).find((key) => formErrors[name][key].valid === false) : \"\");\r\n\r\n  //Определяем сообщение ошибки\r\n  const errorMessage = !!errorKey ? formErrors[name][errorKey].message : \"\";\r\n\r\n  return (\r\n    <span className={cn(className, { [errorClassName]: showErrors[name] && errorMessage.length })} {...props}>\r\n     {showErrors[name] && errorMessage}\r\n    </span>\r\n  );\r\n}\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport { propsPopupWithEditForm } from \"../utils/constants\";\r\nimport PopupWithForm, { Error, Field } from \"./PopupWithForm\";\r\n\r\nconst validators = {\r\n  name: {\r\n    required: (value) => {\r\n      return {\r\n        valid: !!value,\r\n        message: \"Вы пропустили это поле.\",\r\n      };\r\n    },\r\n    minLength: (value) => {\r\n      return {\r\n        valid: value.length > 2,\r\n        message: `Минимальное количество символов: 2. Длина текста сейчас: ${value.length} символ.`,\r\n      };\r\n    },\r\n  },\r\n  about: {\r\n    required: (value) => {\r\n      return {\r\n        valid: !!value,\r\n        message: \"Вы пропустили это поле.\",\r\n      };\r\n    },\r\n    minLength: (value) => {\r\n      return {\r\n        valid: value.length > 2,\r\n        message: `Минимальное количество символов: 2. Длина текста сейчас: ${value.length} символ.`,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nexport default function EditProfilePopup({ isOpen, isLoading, onClose, onUpdateUser }) {\r\n  const handleSubmit = (values) => {\r\n    onUpdateUser(values);\r\n  };\r\n\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title={propsPopupWithEditForm.title}\r\n      name={propsPopupWithEditForm.name}\r\n      isOpen={isOpen}\r\n      isLoad={isLoading}\r\n      submitStates={propsPopupWithEditForm.submitStates}\r\n      validators={validators}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      defaultValues={currentUser}\r\n    >\r\n      <Field name=\"name\"\r\n             type=\"text\"\r\n             className=\"popup__input popup__input_type_name\"\r\n             errorClassName=\"popup__input_type_error\"\r\n             placeholder=\"Название\"\r\n             maxLength={30}/>\r\n      <Error name=\"name\" className=\"popup__error\" errorClassName=\"popup__error_visible\"/>\r\n      <Field name=\"about\"\r\n             type=\"text\"\r\n             className=\"popup__input popup__input_type_about\"\r\n             errorClassName=\"popup__input_type_error\"\r\n             placeholder=\"Описание профиля\"\r\n             maxLength={200}/>\r\n      <Error name=\"about\" className=\"popup__error\" errorClassName=\"popup__error_visible\"/>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n","import { propsPopupWithEditAvatarForm } from \"../utils/constants\";\r\nimport PopupWithForm, { Error, Field } from \"./PopupWithForm\";\r\nimport React from \"react\";\r\n\r\nconst validators = {\r\n  link: {\r\n    required: (value) => {\r\n      return { valid: !!value, message: \"Вы пропустили это поле.\" };\r\n    },\r\n    isUrl: (value) => {\r\n      return { valid: /http(s?):\\/\\/[-\\w.]{3,}\\.[A-Za-z]{2,3}/.test(value), message: \"Введите адрес сайта.\" };\r\n    },\r\n  },\r\n};\r\n\r\nexport default function EditAvatarPopup({ isOpen, isLoading, onClose, onUpdateAvatar }) {\r\n  const handleSubmit = (values) => {\r\n    onUpdateAvatar(values);\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title={propsPopupWithEditAvatarForm.title}\r\n      name={propsPopupWithEditAvatarForm.name}\r\n      isLoad={isLoading}\r\n      isOpen={isOpen}\r\n      submitStates={propsPopupWithEditAvatarForm.submitStates}\r\n      validators={validators}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      defaultValues={{ link: \"\" }}\r\n    >\r\n      <Field name=\"link\"\r\n             type=\"text\"\r\n             className=\"popup__input popup__input_type_link\"\r\n             errorClassName=\"popup__input_type_error\"\r\n             placeholder=\"Ссылка на картинку\"/>\r\n      <Error name=\"link\" className=\"popup__error\" errorClassName=\"popup__error_visible\"/>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n","import { propsPopupWithAddForm } from \"../utils/constants\";\r\nimport PopupWithForm, { Error, Field } from \"./PopupWithForm\";\r\nimport React from \"react\";\r\n\r\nconst validators = {\r\n  name: {\r\n    required: (value) => {\r\n      return { valid: value !== \"\", message: \"Вы пропустили это поле.\" };\r\n    },\r\n    minLength: (value) => {\r\n      return {\r\n        valid: value.length > 2,\r\n        message: `Минимальное количество символов: 2. Длина текста сейчас: ${value.length} символ.`,\r\n      };\r\n    },\r\n  },\r\n  link: {\r\n    required: (value) => {\r\n      return { valid: value !== \"\", message: \"Вы пропустили это поле.\" };\r\n    },\r\n    isUrl: (value) => {\r\n      return { valid: /http(s?):\\/\\/[-\\w.]{3,}\\.[A-Za-z]{2,3}/.test(value), message: \"Введите адрес сайта.\" };\r\n    },\r\n  },\r\n};\r\n\r\nexport default function AddPlacePopup({ isOpen, isLoading, onClose, onAddPlace }) {\r\n  const handleSubmit = (values) => {\r\n    onAddPlace(values);\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title={propsPopupWithAddForm.title}\r\n      name={propsPopupWithAddForm.name}\r\n      isLoad={isLoading}\r\n      isOpen={isOpen}\r\n      submitStates={propsPopupWithAddForm.submitStates}\r\n      validators={validators}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      defaultValues={\r\n        {\r\n          name: \"\",\r\n          link: \"\",\r\n        }\r\n      }\r\n    >\r\n      <Field name=\"name\"\r\n             type=\"text\"\r\n             className=\"popup__input popup__input_type_name\"\r\n             errorClassName=\"popup__input_type_error\"\r\n             placeholder=\"Название\"\r\n             maxLength={30}/>\r\n      <Error name=\"name\" className=\"popup__error\" errorClassName=\"popup__error_visible\"/>\r\n      <Field name=\"link\"\r\n             type=\"text\"\r\n             className=\"popup__input popup__input_type_link\"\r\n             errorClassName=\"popup__input_type_error\"\r\n             placeholder=\"Ссылка на картинку\"/>\r\n      <Error name=\"link\" className=\"popup__error\" errorClassName=\"popup__error_visible\"/>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n","import { apiSettings } from './constants.js';\r\n\r\nclass Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _getProxy(relativePath, method, body = '') {\r\n    const options = {\r\n      method,\r\n      headers: this._headers,\r\n    };\r\n\r\n    if (!!body) {\r\n      options.body = body;\r\n    }\r\n\r\n    return fetch(`${this._baseUrl}${relativePath}`, options);\r\n  }\r\n\r\n  async _handleResponse(response) {\r\n    const description = await response.json();\r\n\r\n    if (response.ok) {\r\n      return description;\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${response.status}\\nОписание: ${description.message}`);\r\n    }\r\n  }\r\n\r\n  async getUserData() {\r\n    const response = await this._getProxy('/users/me', 'GET');\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async setUserData({ name, about }) {\r\n    const response = await this._getProxy('/users/me', 'PATCH', JSON.stringify({ name, about }));\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async setAvatar({ link }) {\r\n    const response = await this._getProxy('/users/me/avatar', 'PATCH', JSON.stringify({ avatar: link }));\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async getCardList() {\r\n    const response = await this._getProxy('/cards', 'GET');\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async addCard({ name, link }) {\r\n    const response = await this._getProxy('/cards', 'POST', JSON.stringify({ name, link }));\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async deleteCard(id) {\r\n    const response = await this._getProxy(`/cards/${id}`, 'DELETE');\r\n    return await this._handleResponse(response);\r\n  }\r\n\r\n  async toggleCardLike(id, like) {\r\n    const response = await this._getProxy(`/cards/likes/${id}`, like ? 'PUT' : 'DELETE');\r\n    return await this._handleResponse(response);\r\n  }\r\n}\r\n\r\nexport const apiObject = new Api(apiSettings);\r\n","import PopupWithForm from \"./PopupWithForm\";\r\nimport { propsPopupWithConfirmForm } from \"../utils/constants.js\";\r\nimport React from \"react\";\r\n\r\nexport default function Confirm({ isOpen, isLoading, onClose, onSubmit }) {\r\n  const handleSubmit = () => {\r\n    onSubmit();\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title={propsPopupWithConfirmForm.title}\r\n      name={propsPopupWithConfirmForm.name}\r\n      submitStates={propsPopupWithConfirmForm.submitStates}\r\n      isOpen={isOpen}\r\n      isLoad={isLoading}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      defaultValues={{}}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport importedLogo from \"../images/header-logo.svg\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport { apiObject } from \"../utils/api\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport Confirm from \"./Confirm\";\r\n\r\nfunction App() {\r\n  //Создаем стейты\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [cards, setCards] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  //Загружаем данные карточек один раз при сборке\r\n  useEffect(() => {\r\n    // setIsLoading(!isLoading);\r\n    apiObject\r\n      .getCardList()\r\n      .then((data) => {\r\n        setCards(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n      .finally(() => {\r\n        // setIsLoading(!isLoading);\r\n      });\r\n  }, []);\r\n\r\n  //Загружаем данные пользователя\r\n  useEffect(() => {\r\n    // setIsLoading(!isLoading);\r\n    apiObject\r\n      .getUserData()\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        // setIsLoading(!isLoading);\r\n      });\r\n  }, []);\r\n\r\n  //Обработчик нажатия на аватарку\r\n  const handleEditAvatarClick = () => {\r\n    //Открываем попап редактирования аватара\r\n    setIsEditAvatarPopupOpen(true);\r\n  };\r\n\r\n  //Обработчик нажатия на кнопку редактирования профиля\r\n  const handleEditProfileClick = () => {\r\n    //Открываем попап редактирования профиля\r\n    setIsEditProfilePopupOpen(true);\r\n  };\r\n\r\n  //Обработчик нажатия на кнопку добавления новой карточки\r\n  const handleAddPlaceClick = () => {\r\n    //Открываем попап добавления новой карточки\r\n    setIsAddPlacePopupOpen(true);\r\n  };\r\n\r\n  //Обработчик нажатия на карточку\r\n  const handleCardClick = (card) => {\r\n    //Открываем попап картинки\r\n    setIsImagePopupOpen(true);\r\n    //Устанавливаем выбранную карточку как текущую, для отображения в попапе\r\n    setSelectedCard(card);\r\n  };\r\n\r\n  //Обработчик закрытия всех попапов\r\n  const closeAllPopups = () => {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsConfirmOpen(false);\r\n    setIsImagePopupOpen(false);\r\n  };\r\n\r\n  //Обработчик обновления данных пользователя\r\n  const handleUpdateUser = (data) => {\r\n    //Отправляем новые данные на сервер\r\n    setIsLoading(true);\r\n    apiObject\r\n      .setUserData(data)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n        closeAllPopups();\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //Обработчик обновления аватара\r\n  const handleUpdateAvatar = (data) => {\r\n    //Отправляем новые данные\r\n    setIsLoading(true);\r\n    apiObject\r\n      .setAvatar(data)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n        closeAllPopups();\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //функция обработчик установки/снятия лайка\r\n  const handleCardLike = (card) => {\r\n    //Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some((item) => item._id === currentUser._id);\r\n\r\n    //Отправляем запрос в API и получаем обновленные данные карточки\r\n    apiObject\r\n      .toggleCardLike(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        //формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n        const newCards = cards.map((item) => (item._id === card._id ? newCard : item));\r\n\r\n        //обновляем стейт\r\n        setCards(newCards);\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  //функция обработчик удаления карточки\r\n  const handleCardDelete = () => {\r\n    //Отправляем запрос на удаление карточки\r\n    setIsLoading(true);\r\n    apiObject\r\n      .deleteCard(selectedCard._id)\r\n      .then(() => {\r\n        const newCards = cards.filter((item) => item._id !== selectedCard._id);\r\n        setCards(newCards);\r\n        closeAllPopups();\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //Обработчик добавления новой карточки\r\n  const handleAddPlace = (card) => {\r\n    //Отправляем запрос на добавление карточки\r\n    setIsLoading(true);\r\n    apiObject\r\n      .addCard(card)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //Обработчик нажатия на кнопку удаления\r\n  const handleClickCardDelete = (card) => {\r\n    //Указываем текущую карточку, чтобы её удалить\r\n    setSelectedCard(card);\r\n    //Закрываем попап\r\n    setIsConfirmOpen(true);\r\n  };\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <Header logo={importedLogo}/>\r\n        <Main\r\n          onEditProfile={handleEditProfileClick}\r\n          onAddPlace={handleAddPlaceClick}\r\n          onEditAvatar={handleEditAvatarClick}\r\n          cards={cards}\r\n          onCardClick={handleCardClick}\r\n          onCardLike={handleCardLike}\r\n          onCardDelete={handleClickCardDelete}\r\n        />\r\n        <Footer/>\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          isLoading={isLoading}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlace}\r\n        />\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          isLoading={isLoading}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          isLoading={isLoading}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n        <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={closeAllPopups}/>\r\n        <Confirm\r\n          isOpen={isConfirmOpen}\r\n          isLoading={isLoading}\r\n          onClose={closeAllPopups}\r\n          onSubmit={handleCardDelete}\r\n        />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}